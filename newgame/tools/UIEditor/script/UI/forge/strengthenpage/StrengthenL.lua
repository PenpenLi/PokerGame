-- StrengthenL.lua-- created by lyl on 2012-12-7-- 炼器--强化装备页面中的左侧面板-- 中super_class.StrengthenL()local _left_slotitem_equi = nil  --左侧的装备item，保存起来，动态修改local _right_slotitem_equi = nillocal _mid_slotitem_equi = nillocal _max_strong_level = 15-- local _left_slotitem_gem = nil   --左侧的宝石item，保存起来，动态修改-- local _left_slotitem_prot = nil  --左侧的保护符item，保存起来，动态修改local _r_up_equi_or_bag = "equipment"local font_size = 16local color_yellow = "#cffff00"local color_gray = "#caaaaaa"local _equip_attr_container_1 = nillocal _equip_attr_container_2 = nilfunction StrengthenL:change_gem_gray_icon( show_gray)    if ForgeModel:get_strengthen_item_date() == nil then        show_gray = false    end    if show_gray then        -- _left_slotitem_gem.view:setIsVisible(false)        -- _left_slotitem_gem_d.view:setIsVisible(true)    else        -- _left_slotitem_gem_d.view:setIsVisible(false)        -- _left_slotitem_gem.view:setIsVisible(true)    endendfunction StrengthenL:__init( pos_x, pos_y, width, height, texture_name , fath_object)    self.fath_object = fath_object	self.add_strong_bg = nil                  -- 强化数字的背景    self.add_strong_bg2 = nil    self.add_strong_add = nil    self.add_strong_add2 = nil                 -- 加号    self.add_strong_num_t = {}                -- 强化所有单个数字图片组成的table    self.add_strong_num_t2 = {}    self.label_t = {}                         --存储label的表。用于改变label显示的内容    local bg_panel = CCBasePanel:panelWithFile( pos_x, pos_y, width, height, texture_name, 600, 600 )    -- local t_bg_l = ZImage:create( bg_panel, UILH_FORGE.bg, 1, 0, -1, -1 )    -- local t_bg_r = ZImage:create( bg_panel, UILH_FORGE.bg, 214, 0, -1, -1 )    -- t_bg_r.view:setFlipX(true)    -- 强化帮助按钮    local function help_btn_callback( ... )        -- print("help_btn click")        ForgeModel:show_help_panel( UILH_FORGE.qh_notic, Lang.forge.strengthen_info )    end    local help_panel = ZBasePanel:create( bg_panel, "", 20, 245, 115, 40 )    help_panel:setTouchClickFun(help_btn_callback)    local help_btn = ZButton:create(help_panel, UILH_NORMAL.wenhao, help_btn_callback, 0, 0, -1, -1)    local help_btn_size = help_btn:getSize()    local help_img = ZImage:create(help_btn, UILH_FORGE.qh_img, 0, 0, -1, -1 )    local help_img_size = help_img:getSize()    help_img:setPosition( help_btn_size.width, ( help_btn_size.height - help_img_size.height ) / 2 )    -- local notic_lab = ZLabel:create( bg_panel, "", 0, 0 )    -- local help_btn_size = help_btn:getSize()    -- local help_btn_pos = help_btn:getPosition()    -- notic_lab:setPosition( help_btn_pos.x + help_btn_size.width, help_btn_pos.y + 8 )    -- 两个框框中间那个向右的箭头    local to_right_img = CCZXImage:imageWithFile(245, 400, -1, -1, UILH_COMMON.right_arrows) --UILH_FORGE.force_jt)    bg_panel:addChild(to_right_img)    -- 成功率百分比    local success_rate = UILabel:create_lable_2("", 130, height - 25, 14)    local success_rate_vip = UILabel:create_lable_2("", 300, height - 25, 14)    bg_panel:addChild(success_rate)    bg_panel:addChild(success_rate_vip)    self.label_t["success_rate"] = success_rate    self.label_t["success_rate_vip"] = success_rate_vip    self:draw_mid_equip_attr(bg_panel)    local t_max_level_notic_bg = ZImage:create( bg_panel, UILH_NORMAL.level_bg, 34, 410, 90, 40, 500, 500 )    local t_max_level_notic_bg_size = t_max_level_notic_bg:getSize()    local t_max_level_img = ZImage:create( t_max_level_notic_bg, UILH_FORGE.jp_review,     t_max_level_notic_bg_size.width / 2, t_max_level_notic_bg_size.height / 2, -1, -1 )    t_max_level_img.view:setAnchorPoint( 0.5, 0.5 )    _mid_slotitem_equi = self:create_item( bg_panel, nil, 45, 315, 55, 55, "equi", "show" )    _mid_slotitem_equi.icon_bg:setAnchorPoint(0.5,0.5)    _mid_slotitem_equi:set_icon_bg_texture( UILH_NORMAL.special_grid, 102/2 - 20, 102/2 - 19, 102, 102 )    _mid_slotitem_equi.view:setScale( 68 / 60 )    ZImage:create(_mid_slotitem_equi.icon_bg, UILH_FORGE.zb_img, 35, 44, -1, -1)    _left_slotitem_equi = self:create_item( bg_panel, nil, 150, 380, 55, 55, "equi", "source" )    _left_slotitem_equi.view:setScale( 68 / 60 )        ZImage:create(_left_slotitem_equi.icon_bg, UILH_FORGE.zb_img, 20, 27, -1, -1)    _right_slotitem_equi = self:create_item( bg_panel, nil, 315, 380, 55, 55, "equi", "target" )    _right_slotitem_equi.view:setScale( 68 / 60 )    ZImage:create(_right_slotitem_equi.icon_bg, UILH_FORGE.zb_img, 20, 27, -1, -1)    _stone_slotitem_grid = self:create_item( bg_panel, nil, 166, 235, 55, 55, "equi", "stone" )    _stone_slotitem_grid.view:setScale( 50 / 60 )    ZImage:create(_stone_slotitem_grid.icon_bg, UILH_FORGE.qhs_img, 13, 27, -1, -1)    _quality_guarante_grid = self:create_item( bg_panel, nil, 312, 235, 55, 55, "equi", "guarante" )    _quality_guarante_grid.view:setScale( 50 / 60 )    ZImage:create(_quality_guarante_grid.icon_bg, UILH_FORGE.bh_img, 13, 27, -1, -1)    self.view = bg_panelendfunction StrengthenL:create_mid_btm_panel( parent )    local _mid_btm_panel = CCBasePanel:panelWithFile( 0, 0, 370, 118+40, UIPIC_FORGE_001, 500, 500 )    parent:addChild(_mid_btm_panel)    self.mid_btm_panel = _mid_btm_panel    -- title    local title_bg = CCZXImage:imageWithFile( 1, 85+40, 127, 28, UIPIC_FORGE_002 )    local title_img = CCZXImage:imageWithFile( 25, 2, 71, 22, UIResourcePath.FileLocate.forge .. "lq_zfz.png" )    title_bg:addChild( title_img )    self.mid_btm_panel:addChild( title_bg )    -- 祝福值    local _wish_val_bar = MUtils:create_progress_bar( 20, 50+30, 325, 16,         UIPIC_FORGE_039,         UIPIC_FORGE_040,         0,         { 14, "#cffffff" },         {1, 1, 1, 1}, true )    _wish_val_bar.set_current_value(0)    parent:addChild(_wish_val_bar.view)    self.wish_val = _wish_val_bar    -- 祝福值满则必定强化成功    local label = UILabel:create_lable_2(color_yellow .. "祝福值满则必定强化成功", 80, 16+20, font_size)    parent:addChild(label)    -- 重置倒计时    local function reset_remain_time()        if self.reverse_time_label then            self.reverse_time_label:setString(ForgeModel:get_wish_val_time())        end        ForgeWin:forge_win_update("wish_val")    end    local reverse_time = ForgeModel:get_wish_val_time()    local time_label = UILabel:create_lable_2(color_yellow .. "重置倒计时：", 170, 90+40, font_size)    parent:addChild(time_label)    self.reverse_time_label = TimerLabel:create_label( parent, 280, 90+40, font_size, reverse_time, "#ccf0000", reset_remain_time, 1)endfunction StrengthenL:set_wish_val( val )    --self.wish_val.set_current_value(val)endfunction StrengthenL:set_max_wish_val( max_val )    --self.wish_val.set_max_value(max_val)endfunction StrengthenL:draw_mid_equip_attr( panel )    _equip_attr_container_1 = CCBasePanel:panelWithFile(48, 65, 370, 355, "")    _equip_attr_container_2 = CCBasePanel:panelWithFile(40, 65, 370, 355, "")    panel:addChild(_equip_attr_container_1)    panel:addChild(_equip_attr_container_2)    local cur_attr_lab = ZLabel:create( _equip_attr_container_1, Lang.forge.tab_one.cur_attribute, 95, 290, font_size )        local next_attr_lab = ZLabel:create( _equip_attr_container_1, Lang.forge.tab_one.next_attribute, 260, 290, font_size )    -- 左右两边的物防、法防label    local phy_def_label_l = UILabel:create_lable_2("#cffffff物防", 138, 265, font_size, ALIGN_RIGHT)    local phy_def_label_r = UILabel:create_lable_2("#cffffff物防", 300, 265, font_size, ALIGN_RIGHT)    local mag_def_label_l = UILabel:create_lable_2("#cffffff法防", 148, 240, font_size, ALIGN_RIGHT)    local mag_def_label_r = UILabel:create_lable_2("#cffffff法防", 310, 240, font_size, ALIGN_RIGHT)    _equip_attr_container_1:addChild(phy_def_label_l)    _equip_attr_container_1:addChild(phy_def_label_r)    _equip_attr_container_2:addChild(mag_def_label_l)    _equip_attr_container_2:addChild(mag_def_label_r)    self.label_t["equip_attr_name_1l"] = phy_def_label_l    self.label_t["equip_attr_name_1r"] = phy_def_label_r    self.label_t["equip_attr_name_2l"] = mag_def_label_l    self.label_t["equip_attr_name_2r"] = mag_def_label_r    -- 左右两边物防、法防数值底框    local phy_def_bg_l = CCBasePanel:panelWithFile(144, 260, 80, 30, "", 500, 500)    local phy_def_bg_r = CCBasePanel:panelWithFile(305, 260, 80, 30, "", 500, 500)    local mag_def_bg_l = CCBasePanel:panelWithFile(154, 235, 80, 30, "", 500, 500)    local mag_def_bg_r = CCBasePanel:panelWithFile(315, 235, 80, 30, "", 500, 500)    _equip_attr_container_1:addChild(phy_def_bg_l)    _equip_attr_container_1:addChild(phy_def_bg_r)    _equip_attr_container_2:addChild(mag_def_bg_l)    _equip_attr_container_2:addChild(mag_def_bg_r)    _equip_attr_container_1:setIsVisible(false)    _equip_attr_container_2:setIsVisible(false)    -- 左右两边物防、法防数值    local phy_def_val_l = UILabel:create_lable_2("", 5, 6)    local phy_def_val_r = UILabel:create_lable_2("", 5, 6)    local mag_def_val_l = UILabel:create_lable_2("", 5, 6)    local mag_def_val_r = UILabel:create_lable_2("", 5, 6)    phy_def_bg_l:addChild(phy_def_val_l)    phy_def_bg_r:addChild(phy_def_val_r)    mag_def_bg_l:addChild(mag_def_val_l)    mag_def_bg_r:addChild(mag_def_val_r)    self.label_t["equip_attr_val_1l"] = phy_def_val_l    self.label_t["equip_attr_val_1r"] = phy_def_val_r    self.label_t["equip_attr_val_2l"] = mag_def_val_l    self.label_t["equip_attr_val_2r"] = mag_def_val_r    -- local _attr_img = CCZXImage:imageWithFile(100, 38, 181, 24, UIPIC_FORGE_016)    -- panel:addChild(_attr_img)    -- self.attr_img = _attr_imgend-- 创建一个item 包括slotitem和信息 function StrengthenL:create_item( panel, item_series, po_x , po_y, size_w, size_h ,type, item_type)    local slotItem = MUtils:create_equip_slotItem( nil, po_x , po_y, size_w, size_h, UILH_COMMON.slot_bg )    local function f2( ... )        if slotItem.item_date then            local a, b, arg = ...            local position = Utils:Split(arg,":");            -- 将相对坐标转化成屏幕坐标(即OpenGL坐标 800x480)            local pos = slotItem.view:getParent():convertToWorldSpace( CCPointMake(tonumber(position[1]),tonumber(position[2])) );                                    local user_item = nil;              if item_type == "source" then                ForgeModel:show_tips_by_series( slotItem.item_date.series, pos.x, pos.y )            elseif item_type == "target" then                if ( slotItem.item_date.series ) then                    if ( _r_up_equi_or_bag == "equipment" ) then                        user_item = UserInfoModel:get_equi_by_id( slotItem.item_date.series )                    elseif ( _r_up_equi_or_bag == "bag" ) then                        user_item = ItemModel:get_item_by_series( slotItem.item_date.series )                    end                    local _user_item = {};                    _user_item.series = "series";                    _user_item.item_id = slotItem.item_id;                    _user_item.strong = user_item.strong+1;                    _user_item.flag = user_item.flag;                    _user_item.holes = { user_item.holes[1],user_item.holes[2],user_item.holes[3]}                    _user_item.void_bytes_tab = {user_item.void_bytes_tab[1]};                    _user_item.smith_num = user_item.smith_num;                    _user_item.smiths = { user_item.smiths[1],user_item.smiths[2],user_item.smiths[3] }                    user_item = nil;                    user_item = _user_item;                end                TipsModel:show_tip( pos.x, pos.y,user_item )            elseif item_type == "show" then                if ( slotItem.item_date.series ) then                    if ( _r_up_equi_or_bag == "equipment" ) then                        user_item = UserInfoModel:get_equi_by_id( slotItem.item_date.series )                    elseif ( _r_up_equi_or_bag == "bag" ) then                        user_item = ItemModel:get_item_by_series( slotItem.item_date.series )                    end                    local _user_item = {};                    _user_item.series = "series";                    _user_item.item_id = slotItem.item_id;                    _user_item.strong = _max_strong_level;                    _user_item.flag = user_item.flag;                    _user_item.holes = { user_item.holes[1],user_item.holes[2],user_item.holes[3]}                    _user_item.void_bytes_tab = {user_item.void_bytes_tab[1]};                    _user_item.smith_num = user_item.smith_num;                    _user_item.smiths = { user_item.smiths[1],user_item.smiths[2],user_item.smiths[3] }                    user_item = nil;                    user_item = _user_item;                end                TipsModel:show_tip( pos.x, pos.y,user_item )            elseif item_type == "stone" then            elseif item_type == "guarante" then            end        end    end    slotItem:set_click_event( f2 )    panel:addChild( slotItem.view )    --需要item存储一下选中的slot的数据。初始化设置为nil    slotItem.level = nil    -- slotItem.item_series = nil    return slotItemend-- 选择的道具变化function StrengthenL:strengthen_item_change(  )    -- slotItem的显示    local strengthen_item_date = ForgeModel:get_strengthen_item_date(  )    local if_gem_exist, if_prot_exist = ForgeModel:check_if_exist_mate(  )    local gem_item_id_need, prot_item_id_need = ForgeModel:get_strengthen_gem_prot_id(  )    local mete_series_t = ForgeModel:get_strengthen_meterial(  )    _left_slotitem_equi.set_date( strengthen_item_date )    _right_slotitem_equi.set_date(strengthen_item_date)    _mid_slotitem_equi.set_date(strengthen_item_date)    if if_gem_exist then        -- local stone_series = nil        for i=1, #mete_series_t do            local item_date_s = ForgeModel:get_item_in_bag_or_body( mete_series_t[i] )            if ForgeModel:check_item_is_gem( item_date_s.item_id ) == true then                item_date_s = ForgeModel:get_item_in_bag_or_body( mete_series_t[i] )                _stone_slotitem_grid.set_date(item_date_s)                break            end        end        -- local stone_series = mete_series_t[1]        -- local item_date_s = ForgeModel:get_item_in_bag_or_body( stone_series )        -- if ForgeModel:check_item_is_gem( item_date_s.item_id ) == false then        --     item_date_s = ForgeModel:get_item_in_bag_or_body( mete_series_t[2] )        -- end        -- _stone_slotitem_grid.set_date(item_date_s)    else        _stone_slotitem_grid.set_date(nil)    end    if if_prot_exist then        for i=1, #mete_series_t do            local item_date_p = ForgeModel:get_item_in_bag_or_body( mete_series_t[i])            if ForgeModel:check_item_is_prot( item_date_p.item_id ) == true then                item_date_p = ForgeModel:get_item_in_bag_or_body( mete_series_t[i] )                _quality_guarante_grid.set_date(item_date_p)                break            end        end    else        _quality_guarante_grid.set_date(nil)    end    ---------- 增加品质特效 /hcl/2013/7/17-------    if ( strengthen_item_date ) then        local item_base = ItemConfig:get_item_by_id( strengthen_item_date.item_id );        local pj = ItemModel:get_item_pj( item_base )        _left_slotitem_equi:set_item_quality( strengthen_item_date.void_bytes_tab[1],pj );        _right_slotitem_equi:set_item_quality( strengthen_item_date.void_bytes_tab[1],pj );        _right_slotitem_equi:set_strong_level(strengthen_item_date.strong+1)        _mid_slotitem_equi:set_strong_level(_max_strong_level)    else        _left_slotitem_equi:set_item_quality( nil , nil)        _right_slotitem_equi:set_item_quality(nil, nil)        _mid_slotitem_equi:set_item_quality(nil, nil)        -- _stone_slotitem_grid.set_date(nil)        -- _quality_guarante_grid.set_date(nil)    end    ----------------------------------------------    -- 相关关属性刷新    if strengthen_item_date then        self:set_add_source_strong( strengthen_item_date.strong )        self:set_add_target_strong(strengthen_item_date.strong+1)        local max_val = ForgeModel:get_max_wish_val( strengthen_item_date.strong +1 )        self:set_max_wish_val(max_val or 0)    else        self:set_add_source_strong( nil )        self:set_add_target_strong(nil)        self:set_max_wish_val(0)    end        self:show_left_equi_attr()       -- 强化加成的属性    -- self:check_action_but_able()       end-- 更新强化石function StrengthenL:update_strengthen_gem(  )    -- print("更新强化石1")    local strengthen_gem_date = ForgeModel:get_strengthen_gem_date(  )    -- _left_slotitem_gem.set_date( strengthen_gem_date )    -- self:check_action_but_able()end-- 更新保护符function StrengthenL:update_strengthen_prot(  )    local strengthen_prot_date = ForgeModel:get_strengthen_prot_date(  )    -- _left_slotitem_prot.set_date( strengthen_prot_date )end-- 设置加成的数字（图片形式）function StrengthenL:set_add_target_strong( num )    -- -- 移除左侧显示强化等级的相关图片    -- self.view:removeChild( self.add_strong_bg, true)     -- self.view:removeChild( self.add_strong_add, true )    -- for i, v in ipairs(self.add_strong_num_t) do    --     self.view:removeChild( v, true )    -- end    -- if num == nil then    --     return     -- end    -- if num and num > 0 then    --     self.add_strong_bg    = CCZXImage:imageWithFile( 210+50, 265+40, 100, 56, UIResourcePath.FileLocate.forge .. "add_strong_bg.png" )    --     self.add_strong_add   = CCZXImage:imageWithFile( 240+50, 285+40, 19, 18, UIResourcePath.FileLocate.normal .. "add_mark.png" )    --     self.add_strong_num_t = self:change_num_to_ima( num, 256+50, 283+40 )    --     self.view:addChild( self.add_strong_bg )     --     self.view:addChild( self.add_strong_add )    --     for i,v in ipairs( self.add_strong_num_t ) do    --         self.view:addChild( v )     --     end    -- endendfunction StrengthenL:set_add_source_strong( num )    -- 移除左侧显示强化等级的相关图片    -- self.view:removeChild( self.add_strong_bg2, true)     -- self.view:removeChild( self.add_strong_add2, true )    -- for i, v in ipairs(self.add_strong_num_t2) do    --     self.view:removeChild( v, true )    -- end    -- if num == nil then    --     return     -- end    -- if num and num > 0 then    --     self.add_strong_bg2    = CCZXImage:imageWithFile( 210+50-180, 265+40, 100, 56, UIResourcePath.FileLocate.forge .. "add_strong_bg.png" )    --     self.add_strong_add2   = CCZXImage:imageWithFile( 240+50-180, 285+40, 19, 18, UIResourcePath.FileLocate.normal .. "add_mark.png" )    --     self.add_strong_num_t2 = self:change_num_to_ima( num, 256+50-180, 283+40 )    --     self.view:addChild( self.add_strong_bg2 )     --     self.view:addChild( self.add_strong_add2 )    --     for i,v in ipairs( self.add_strong_num_t2 ) do    --         self.view:addChild( v )     --     end    -- endend--根据获取数字图片名称function StrengthenL:get_num_ima( one_num )    if one_num == "0" then        return UIResourcePath.FileLocate.normal .. "num0.png"    elseif one_num == "1" then        return UIResourcePath.FileLocate.normal .. "num1.png"    elseif one_num == "2" then        return UIResourcePath.FileLocate.normal .. "num2.png"    elseif one_num == "3" then        return UIResourcePath.FileLocate.normal .. "num3.png"    elseif one_num == "4" then        return UIResourcePath.FileLocate.normal .. "num4.png"    elseif one_num == "5" then        return UIResourcePath.FileLocate.normal .. "num5.png"    elseif one_num == "6" then        return UIResourcePath.FileLocate.normal .. "num6.png"    elseif one_num == "7" then        return UIResourcePath.FileLocate.normal .. "num7.png"    elseif one_num == "8" then        return UIResourcePath.FileLocate.normal .. "num8.png"    elseif one_num == "9" then        return UIResourcePath.FileLocate.normal .. "num9.png"    end    return UIResourcePath.FileLocate.normal .. "num0.png"end--把数字转成对应的数字图片:  显示的数字，起始坐标 x  y ,显示的底panelfunction StrengthenL:change_num_to_ima( num ,star_x, star_y)    local num_image_t = {}         -- 获取数字对应所有图片的表    if "number" ~= type(num) then        return num_image_t    end    local num_str = tostring(num)  --把数字转成字符串    local i = 1                    --获取字符索引    if num_str ~= nil then        local a_char = string.sub(num_str, i, i)        while a_char ~= "" do            --画图            local num_ima = CCZXImage:imageWithFile( star_x + 16 * (i - 1), star_y, 19, 22, self:get_num_ima( a_char )); --数字图片            -- pannel:addChild( num_ima )            num_image_t[ #num_image_t + 1] = num_ima            i = i + 1            a_char = string.sub(num_str, i, i)        end    end    return num_image_tend-- 显示选中的装备的属性function StrengthenL:show_left_equi_attr(  )    local strengthen_item_date = ForgeModel:get_strengthen_item_date(  )    if strengthen_item_date == nil then        _equip_attr_container_1:setIsVisible(false)        _equip_attr_container_2:setIsVisible(false)        return     end    _equip_attr_container_1:setIsVisible(true)    _equip_attr_container_2:setIsVisible(true)    --基础属性    require "config/ItemConfig"    local attr_t = ItemConfig:get_staitc_attrs_by_id( strengthen_item_date.item_id )  -- 装备的基础属性值 表    -- 获取当前当即加强的属性    local strong_curr_attr = ItemConfig:get_strong_attr_by_level( strengthen_item_date.item_id, strengthen_item_date.strong )    -- 获取下一个强化等级加强的属性    local strong_next_attr = 0    if strengthen_item_date.strong ~= nil then        strong_next_attr = ItemConfig:get_strong_attr_by_level( strengthen_item_date.item_id, strengthen_item_date.strong + 1 )    end        -- 第一属性    if attr_t[1] ~= nil then        local str_temp = ""        local attr_name = ForgeCommon:get_attr_name_by_type( attr_t[1]["type"] )                -- 属性名称        local value = ItemModel:get_equip_base_single_attr_atta( strengthen_item_date.item_id, strengthen_item_date.void_bytes_tab[1], 1 )        local strong_curr_attr_value = ItemModel:get_equip_strong_single_attr_atta( strengthen_item_date.item_id, strengthen_item_date.strong, strengthen_item_date.void_bytes_tab[1], 1 )        local strong_next_attr_value = ItemModel:get_equip_strong_single_attr_atta( strengthen_item_date.item_id, strengthen_item_date.strong+1, strengthen_item_date.void_bytes_tab[1], 1 )        self.label_t["equip_attr_name_1l"]:setString("#cffffff" .. attr_name)        self.label_t["equip_attr_val_1l"]:setString("#c00ff00+" .. strong_curr_attr_value)        if strong_next_attr ~= nil then            self.label_t["equip_attr_name_1r"]:setString("#cffffff" .. attr_name)            self.label_t["equip_attr_val_1r"]:setString("#c00ff00+" .. strong_next_attr_value)        end    else         _equip_attr_container_1:setIsVisible(false)    end    if attr_t[2] ~= nil then        local str_temp = ""        local attr_name = ForgeCommon:get_attr_name_by_type( attr_t[2]["type"] )                -- 属性名称        local value = ItemModel:get_equip_base_single_attr_atta( strengthen_item_date.item_id, strengthen_item_date.void_bytes_tab[1], 2 )        local strong_curr_attr2_value = ItemModel:get_equip_strong_single_attr_atta( strengthen_item_date.item_id, strengthen_item_date.strong, strengthen_item_date.void_bytes_tab[1], 2 )        local strong_next_attr2_value = ItemModel:get_equip_strong_single_attr_atta( strengthen_item_date.item_id, strengthen_item_date.strong+1, strengthen_item_date.void_bytes_tab[1], 2 )        self.label_t["equip_attr_name_2l"]:setString("#cffffff" .. attr_name)        self.label_t["equip_attr_val_2l"]:setString("#c00ff00+" .. strong_curr_attr2_value)        if strong_next_attr ~= nil then            self.label_t["equip_attr_name_2r"]:setString("#cffffff" .. attr_name)            self.label_t["equip_attr_val_2r"]:setString("#c00ff00+" .. strong_next_attr2_value)        end    else         _equip_attr_container_2:setIsVisible(false)    end    -- 成功率和消耗    require "config/EquipEnhanceConfig"    local succ_per = ForgeModel:get_strengthen_success_percent(  )    self:update_zhan_bu_buff_info( succ_per )end-- 更新道具数据function StrengthenL:update_all_item_date(  )    self:strengthen_item_change()    -- self:update_strengthen_gem()    -- self:update_strengthen_prot()end-- 设置强化按钮是否可以有效function StrengthenL:check_action_but_able(  )    if ForgeModel:check_equip_can_strengthen(  ) then        -- self.strengthen_but:setCurState( CLICK_STATE_UP )    else        -- self.strengthen_but:setCurState( CLICK_STATE_DISABLE )    end    local strengthen_item_date = ForgeModel:get_strengthen_item_date(  )    if strengthen_item_date ~= nil then        -- if strengthen_item_date.strong >=3 and strengthen_item_date.strong<=5 then --高级 完美、特级 以上 不需要显示保护符        --     _auto_buy_stone_btn.view:setPosition(22,50);        --     _auto_buy_fu_btn.view:setIsVisible(true);        -- else        --     _auto_buy_stone_btn.view:setPosition(22,35);        --     _auto_buy_fu_btn.view:setIsVisible(false);        --     _auto_buy_fu_btn.set_state(false)        -- end    endendfunction StrengthenL:update_zhan_bu_buff_info(succ_per)    local temp_info = ZhanBuModel:check_index_item_add_buff(ZhanBuModel.buff_type_index.item_add)    local vip = VIPModel:get_vip_info( )    local color = ""    if vip and vip.level and vip.level >= 3 then        color = color_yellow    else        color = color_gray    end    if temp_info ~= nil then        if succ_per then            self.label_t[ "success_rate" ]:setString(LangGameString[1012] .. succ_per.."%" .. "#c00c0ff+" .. temp_info.add_rate .. LangGameString[1013] ) -- [1012]="成功率：#c66ff66" -- [1013]="%(卜)"            self.label_t[ "success_rate_vip" ]:setString(color .. "VIP5 + 3%")        else            self.label_t[ "success_rate" ]:setString(LangGameString[1014] .. "#c00c0ff+" .. temp_info.add_rate .. LangGameString[1013] ) -- [1014]="成功率：" -- [1013]="%(卜)"            self.label_t[ "success_rate_vip" ]:setString(color .. "VIP5 + 3%")        end            else        if succ_per then            self.label_t[ "success_rate" ]:setString(LangGameString[1012] .. succ_per.."%") -- [1012]="成功率：#c66ff66"            self.label_t[ "success_rate_vip" ]:setString(color .. "VIP5 + 3%")        else            self.label_t[ "success_rate" ]:setString("")            self.label_t[ "success_rate_vip" ]:setString("")        end    endendfunction StrengthenL:destroy(  )    if self.reverse_time_label then        self.reverse_time_label:destroy()        self.reverse_time_label = nil        -- print("========= StrengthenL:destroy() ==========")    endend