-- ZhuangBeiXiLian.lua-- created by hcl on 2013-7-29-- 炼器--装备洗炼面板super_class.ZhuangBeiXiLian(Window)local _left_slotitem_item_source = nil   --左侧源item，保存起来，动态修改local _t_scroll_item_info = {}-- 材料序列号的集合。local _mate_series_t = {}--记录右侧装备区，是背包还是人物状态.默认是人物local _r_up_equi_or_bag = "equipment"--local _had_show_explain = false             --标记为未显示  说明面板function ZhuangBeiXiLian:__init(  )    self.panel_t = {}                  --存储panel的表。用于改变panel内容    self.label_t = {}                  --存储label的表。用于改变label显示的内容    self.right_item_t = {}             --存储右侧上部分的所有item。用于清空处理    self.show_item_panel_t = {}    self.r_down_scroll = nil    _t_scroll_item_info.x = 10    _t_scroll_item_info.y = 18    _t_scroll_item_info.width = 420 - _t_scroll_item_info.x * 2    _t_scroll_item_info.height = 488 - _t_scroll_item_info.y * 2    _t_scroll_item_info.x_num = 2	-- 创建个区域的面板    self.view:addChild( self:create_left_panel( 428, 10, 430, 488, UILH_COMMON.bottom_bg ) )             --左侧    self.view:addChild( self:create_right_panel( 10, 10, 420, 488, UILH_COMMON.bottom_bg ) )       --右侧end--刷新所有panel，当强化结束，服务器通知物品发生改变，就被调用刷新function ZhuangBeiXiLian:flash_all_item( )    self:syn_sele_item()    self:flash_all_item_right()end-- 刷新人物装备。获取最新人物身上物品后会被调用function ZhuangBeiXiLian:flash_all_item_char(  )    self:syn_sele_item()    self:flash_all_item_right()endfunction ZhuangBeiXiLian:syn_date(  )    self:syn_sele_item()    self:flash_all_item_right()endfunction ZhuangBeiXiLian:update( update_type ,args)    print("ZhuangBeiXiLian:update( update_type )",update_type)    -- if update_type == "bag" or update_type == "bag_change" or update_type == "bag_add" or update_type == "bag_remove" then    --     self:syn_sele_item()    --     self:flash_all_item_right()    -- elseif update_type == "equipment" then    --     self:syn_sele_item()    --     self:flash_all_item_right()    -- elseif update_type == "all" then    --     self:set_left_item( "", 0, nil, nil)    -- 每次打开都清空选中数据    --     self:syn_date(  )    -- end     if ( update_type == "xilian" ) then        self:update_xilianshuxing( args[1] );    elseif ( update_type == "xilian2" ) then        self:update_jihuo( args[1] );    elseif ( update_type == "all" ) then         self:set_left_item( nil, nil)         self:syn_date(  )    endend-- 同步选中装备的最新属性(重新从人物或者背包model获取数据)function ZhuangBeiXiLian:syn_sele_item(  )    -- local item_series = _left_slotitem_item_source.item_series    -- require "model/ItemModel"    -- local item = ItemModel:get_item_by_series( item_series )    -- if item ~= nil then    --     self:set_left_item( "", 999999999, nil, nil)    -- end    self:set_left_item( nil, nil)end-- 显示操作结果的提示function ZhuangBeiXiLian:show_handle_result( result, result_msg )    -- 值改变数量，服务器就不会发送（8,9）（物品发生改变）消息，就不会走上面flash_all_item流程。所以这里要刷新    -- self:flash_all_item()    -- self:request_bag_items_check()    -- 请求更新装备的数据    --获取装备列表    ForgeWin:set_if_waiting_result( true )    ForgeWin:set_if_waiting_reflash( true )    UserEquipCC:request_get_equi()    -- 测试用    -- local show_cont = ""    -- if result == 1 then    --     show_cont = "成功!"    -- else    --     show_cont = result_msg or ""    -- end    -- local label_temp = UILabel:create_label_1(show_cont, CCSize(300,100), 150, 250, 20, CCTextAlignmentCenter, 255, 0, 0)    -- self.label_t[ "result_label" ] = label_temp    -- self.panel_t["left_panel"]:addChild( label_temp )end-- 返回每个panel，用于炼器主截面清除所有内容。切换界面的时候用function  ZhuangBeiXiLian:get_all_panel()    return { self.panel_t["left_panel"], self.panel_t["right_panel"] }end--================================================================================================================================--================================================================================================================================----左侧----================================================================================================================================--================================================================================================================================--创建左侧panelfunction ZhuangBeiXiLian:create_left_panel( pos_x, pos_y, width, height, texture_name )    local panel = CCBasePanel:panelWithFile( pos_x, pos_y, width, height, texture_name, 500, 500 )    -- 点击其他地方，消除操作结果。测试暂时使用    -- local function f1(eventType,x,y)    --     if self.label_t[ "result_label" ] then    --         self.label_t[ "result_label" ]:setString("")    --     end    -- end    -- panel:registerScriptHandler(f1)    --注册    -- local bg_ima_01 = CCZXImage:imageWithFile( 2, 2, 313, 349, UIResourcePath.FileLocate.forge .. "bg_image.jpg" );                      -- 背景图片，鼎    -- panel:addChild( bg_ima_01 )    -- local bg_ima_02 = CCZXImage:imageWithFile( 132.5 - 14, 265-14, -1, -1, UIResourcePath.FileLocate.forge .. "slot_bg_01.png" );       -- 框框，下同    -- panel:addChild( bg_ima_02, 10 )    -- local t_bg_l = ZImage:create( panel, UILH_FORGE.bg, 1, 0, -1, -1 )    -- local t_bg_r = ZImage:create( panel, UILH_FORGE.bg, 214, 0, -1, -1 )    -- t_bg_r.view:setFlipX(true)        --图标。  初始化的时候，图标都是使用默认图标。传入nil    _left_slotitem_item_source = self:create_item( panel, nil, 180, 320, 64, 64, "source" )          --原始item    _left_slotitem_item_source.view:setScale( 68 / 60 )    _left_slotitem_item_source:set_icon_bg_texture( UILH_COMMON.slot_bg, -9, -9, 83, 83)    ZImage:create(_left_slotitem_item_source.icon_bg, UILH_FORGE.zb_img, 25, 34, -1, -1)    -- 洗炼属性文字 ,选中框,激活按钮    -- 洗炼属性view表    self.attr_view_table = {};    self.lock_view_table = {};    self.jihuo_btn_table = {};    self.attr_bg = {}    self.is_lock_table = {0,0,0};    self.is_max_attr_table = { false,false,false };    self.lock_num = 0;    local temp_x_add = 100    for i=1,3 do        local y = 255 - (i-1)*48;        self.attr_bg[i] = ZImage:create( panel, UILH_COMMON.bg_07, temp_x_add , y - 4, 210, 35, nil, 500, 500)        self.attr_view_table[i] = MUtils:create_zxfont(panel,LangGameString[1047],100 + temp_x_add,y+9,2,14); -- [1047]="激活需要30000银两"        -- ZImage:create( panel, UILH_NORMAL.text_bg2, temp_x_add + 100, y + 12, 210, 35, nil, 500, 500)        --MUtils:create_zximg2(self.attr_view_table[i],UILH_NORMAL.text_bg2,-121 + temp_x_add,-12,210,35,13,8,13,8,13,8,13,8,-1)        self.attr_bg[i].view:setIsVisible(false)        self.attr_view_table[i]:setIsVisible(false);        -- 是否锁定        local function use_shield_fun( is_lock )            print("use_shield_fun( is_lock )",is_lock,self.lock_num);            if ( is_lock ) then                self.is_lock_table[i] = 1;                self.lock_num = self.lock_num + 1;                -- 更新需要的金钱label                self:update_need_money_label()                if ( self.lock_num == self.curr_user_item.smith_num-1 ) then                    for j=1,3 do                        if ( self.is_lock_table[j] == 0 ) then                            self.lock_view_table[j].view:setIsVisible(false);                            break;                        end                    end                end            else                self.is_lock_table[i] = 0;                self.lock_num = self.lock_num - 1;                -- 更新需要的金钱label                self:update_need_money_label()                if ( self.lock_num < self.curr_user_item.smith_num-1 ) then                    for j=1,3 do                        if ( j~=i and self.is_lock_table[j] == 0 ) then                            self.lock_view_table[j].view:setIsVisible(true);                            break;                        end                    end                end            end        end        self.lock_view_table[i] = UIButton:create_switch_button(210 + temp_x_add,y, 70, 25, UIPIC_COMMON_FY_001,UIPIC_COMMON_FY_002, LangGameString[665], 26, 14, nil, nil, nil, nil, use_shield_fun ) -- [665]="锁定"        self.lock_view_table[i].set_state(false);        panel:addChild(self.lock_view_table[i].view,2);        self.lock_view_table[i].view:setIsVisible(false);        local function jihuo_fun(eventType,args,msg_id)            if ( eventType == TOUCH_CLICK ) then                self:send_request_upgrade( 6,1,{i})            end            return true;        end        -- 激活按钮        self.jihuo_btn_table[i] = MUtils:create_btn_and_lab(panel,UILH_COMMON.button4,UILH_COMMON.button4,jihuo_fun,220 + temp_x_add,y,65,32,LangGameString[1048],16); -- [1048]="激活"        self.jihuo_btn_table[i]:setIsVisible(false);    end    local free_xilian_count = ForgeModel:get_free_xilian_count();    self.lab_need_money = MUtils:create_zxfont(panel,"#cfff000今日可免费洗炼"..free_xilian_count.."次",205,120,2,16);    -- 洗炼按钮     local function but_1_fun(eventType,x,y)        --if eventType == TOUCH_CLICK then             local function fun()                local free_xilian_count = ForgeModel:get_free_xilian_count();                if free_xilian_count == 0 then                     local money = EquipEnhanceConfig:get_xl_need_money( self.lock_num )                    if PlayerAvatar:check_is_enough_money( 4,money ) == false then                         return;                    end                end                local param_arr = {};                param_arr[1] = 0;                for i=1,3 do                    param_arr[i+1] = self.is_lock_table[i]                end                self:send_request_upgrade( 7 ,4,param_arr );            end            self:is_have_max_attr_not_lock( fun )        -- end        -- return true    end    local normal_xilan_btn = ZTextButton:create( panel, Lang.forge.tab_eight.normal_xilian, UILH_COMMON.btn4_nor, but_1_fun, 0, 0 )    local normal_xilan_btn_size = normal_xilan_btn.view:getSize()    normal_xilan_btn:setPosition( ( width - normal_xilan_btn_size.width * 2 ) / 3, 35)    normal_xilan_btn.view:addTexWithFile( CLICK_STATE_DISABLE, UILH_COMMON.btn4_dis )    self.xilian_btn = normal_xilan_btn.view    --self.xilian_btn = MUtils:create_btn( panel,UILH_COMMON.btn4_nor,UILH_COMMON.btn4_nor, but_1_fun,28,40,120,41,1,39,19,39,19,39,19,39,19)    --MUtils:create_sprite(self.xilian_btn,UIResourcePath.FileLocate.forge .. "xl_btn1.png",60,20.5)    self.xilian_btn:setCurState( CLICK_STATE_DISABLE )    -- 至尊洗炼按钮     local function but_2_fun(eventType,x,y)        --if eventType == TOUCH_CLICK then            if ( _left_slotitem_item_source.item_series ) then                local user_item = self:get_user_item( _left_slotitem_item_source.item_series )                print("_left_slotitem_item_source.item_series",_left_slotitem_item_source.item_series,user_item.item_id);                -- 打开至尊洗炼面板                ZhiZunXiLianWin:show( user_item ,_left_slotitem_item_source.item_series);            end            return true        -- end        -- return true    end    local vip_xilian_btn = ZTextButton:create( panel, Lang.forge.tab_eight.vip_xilian, UILH_COMMON.lh_button_4_r, but_2_fun, 0, 0 )    vip_xilian_btn:setPosition( ( width - normal_xilan_btn_size.width * 2 ) / 3 * 2 + normal_xilan_btn_size.width, 35)    vip_xilian_btn.view:addTexWithFile( CLICK_STATE_DISABLE, UILH_COMMON.btn4_dis )    self.zhizunxilian_btn = vip_xilian_btn.view    --self.zhizunxilian_btn = MUtils:create_btn( panel,UIPIC_COMMOM_001,UIPIC_COMMOM_001, but_2_fun,178,40,120,41,1,39,19,39,19,39,19,39,19)    --MUtils:create_sprite(self.zhizunxilian_btn,UIResourcePath.FileLocate.forge .. "xl_btn2.png",60,20.5)    -- local function but_2_fun(eventType,x,y)    --     if eventType == TOUCH_CLICK then     --         ForgeModel:show_help_panel( "ui/forge/xilianshuoming.png", Lang.forge.xlsm )    --         return true    --     end    --     return true    -- end    -- local but_2 = MUtils:creat_mutable_btn( 5, 315, {x=0, y=0, w=28, h=28}, UIResourcePath.FileLocate.normal .. "common_question_mark.png",{x=30, y=2, w=83, h=18},    --  UIResourcePath.FileLocate.forge .. "xilianshuoming.png", but_2_fun )    -- panel:addChild(but_2)    -- 强化帮助按钮    -- 强化帮助按钮    local function help_btn_callback( ... )        -- print("help_btn click")        ForgeModel:show_help_panel( UILH_FORGE.xl_notic, Lang.forge.xlsm )    end    local help_panel = ZBasePanel:create( panel, "", 280 + 8, 245 + 189, 115, 40 )    help_panel:setTouchClickFun(help_btn_callback)    local help_btn = ZButton:create(help_panel, UILH_NORMAL.wenhao, help_btn_callback, 0, 0, -1, -1)    local help_btn_size = help_btn:getSize()    local help_img = ZImage:create(help_btn, UILH_FORGE.xl_img, 0, 0, -1, -1 )    local help_img_size = help_img:getSize()    help_img:setPosition( help_btn_size.width, ( help_btn_size.height - help_img_size.height ) / 2 )        -- local help_btn = ZButton:create(panel, UILH_NORMAL.wenhao, help_btn_callback, 300, 425, -1, -1)    -- local help_btn_size = help_btn:getSize()    -- local help_img = ZImage:create(help_btn, UILH_FORGE.xl_img, 0, 0, -1, -1 )    -- local help_img_size = help_img:getSize()    -- help_img:setPosition( help_btn_size.width, ( help_btn_size.height - help_img_size.height ) / 2 )    -- 是否显示至尊洗炼    if ( VIPModel:get_vip_info( ).level>=5 ) then         self.zhizunxilian_btn:setIsVisible(true);    else        self.zhizunxilian_btn:setIsVisible(false);    end    self.panel_t["left_panel"] = panel        --存入table，用于动态修改    return panelend-- 创建一个item 包括slotitem和信息 function ZhuangBeiXiLian:create_item( panel, item_series, po_x , po_y, size_w, size_h , item_type)    -- local slotItem = SlotItem(size_w, size_h)    -- slotItem:set_icon_bg_texture( UIResourcePath.FileLocate.normal .. "item_bg2.png",  -6 ,  -6, size_w+12, size_h+12 )   -- 背框        local slotItem = MUtils:create_equip_slotItem( nil, po_x, po_y, size_w, size_h, UIPIC_FORGE_029 )    --获取item_id 。默认用一个不存在的id  0，可以去到默认图标    local item_id = 0    -- slotItem:set_icon( item_id )    --slotItem:setPosition( po_x , po_y )    --设置回调单击函数    local function f1()        if "source" == item_type then            self:set_r_up_one_slot_able( slotItem.item_series )            self:set_left_item( nil, nil )        end    end    slotItem:set_double_click_event( f1 )    local function f2( ... )        local a, b, arg = ...        local position = Utils:Split(arg,":");            -- 将相对坐标转化成屏幕坐标(即OpenGL坐标 800x480)        local pos = slotItem.view:getParent():convertToWorldSpace( CCPointMake(position[1],position[2]) );        local user_item = nil;          if ( slotItem.item_series ) then            if ( _r_up_equi_or_bag == "equipment" ) then                user_item = UserInfoModel:get_equi_by_id( slotItem.item_series )            elseif ( _r_up_equi_or_bag == "bag" ) then                user_item = ItemModel:get_item_by_series( slotItem.item_series )            end                end        TipsModel:show_tip( pos.x, pos.y,user_item )    end    slotItem:set_click_event( f2 )    panel:addChild( slotItem.view )    -- -- 加默认提示字    -- local show_notice_word = ""    -- if "source" == item_type then    --     show_notice_word = UIResourcePath.FileLocate.role .. "text_zhuangbei.png"    -- elseif "target" == item_type then    --     show_notice_word = UIResourcePath.FileLocate.role .. "text_zhuangbei.png"    -- else     --     show_notice_word = UIResourcePath.FileLocate.role .. "text_cailiao.png"    -- end     -- -- slotItem.default_word = UILabel:create_label_1(show_notice_word, CCSize(100,15), 30, 30, 12, CCTextAlignmentCenter, 255, 255, 0)        -- slotItem.default_word = CCZXImage:imageWithFile( 0, 0, 55, 55, show_notice_word )    -- slotItem.view:addChild( slotItem.default_word )           --因为lable要随slot共存亡，所以是添加到slot的view中    --需要item存储一下选中的slot的数据。初始化设置为nil(起始可以不写，这里是为了有一种"定义了的"印象)    slotItem.level       = nil    slotItem.item_series = nil    slotItem.item_id     = nil    return slotItemend-- 设置左侧，item的属性:类型 字符串（ 无用 ）,物品id(是基本属性，不是序列号，注意了)function ZhuangBeiXiLian:set_left_item( t_item_data, item_series )    self.lock_num = 0;    -- 重置锁定属性    for i=1,3 do         self.is_lock_table[i] = 0    end    _left_slotitem_item_source.set_date( t_item_data )    if t_item_data then        _left_slotitem_item_source.item_series = item_series        self.curr_user_item = t_item_data;    end    local user_item = self:get_user_item( item_series )    if user_item then        for i=1,3 do            local smith = user_item.smiths[i];            self.attr_view_table[i]:setIsVisible(true);            self.attr_bg[i].view:setIsVisible(true)            if ( i<= user_item.smith_num ) then                print("smith.type,smith.value",smith.type,smith.value)                local color ,is_max_attr = self:get_attr_color( smith.type,smith.value );                self.is_max_attr_table[i] = is_max_attr;                local str = color..staticAttriTypeList[smith.type].."  +"..math.abs(smith.value);                if ( is_max_attr ) then                    str = str .. LangGameString[1046]; -- [1046]="(满)"                end                 self.attr_view_table[i]:setText( str );                self.jihuo_btn_table[i]:setIsVisible(false);                if ( user_item.smith_num >1 ) then                    self.lock_view_table[i].view:setIsVisible(true);                else                    self.lock_view_table[i].view:setIsVisible(false);                end                self.lock_view_table[i].set_state(false);            else                if ( i == user_item.smith_num + 1 ) then                    self.attr_view_table[i]:setText(LangGameString[1050]..30000*i..LangGameString[412]); -- [1050]="激活需要" -- [412]="银两"                else                    self.attr_view_table[i]:setText(LangGameString[1041]); -- [1041]="未激活"                end                self.lock_view_table[i].view:setIsVisible(false);                if ( i == user_item.smith_num + 1 ) then                    self.jihuo_btn_table[i]:setIsVisible(true);                else                    self.jihuo_btn_table[i]:setIsVisible(false);                end                self.is_max_attr_table[i] = false;            end        end        -- 如果有一个洗炼属性        if ( user_item.smith_num > 0 ) then            self.xilian_btn:setCurState( CLICK_STATE_UP )            self.zhizunxilian_btn:setCurState( CLICK_STATE_UP )        else            self.xilian_btn:setCurState( CLICK_STATE_DISABLE )            self.zhizunxilian_btn:setCurState( CLICK_STATE_DISABLE )        end    else        for i=1,3 do            self.attr_view_table[i]:setIsVisible(false);            self.lock_view_table[i].view:setIsVisible(false);            self.jihuo_btn_table[i]:setIsVisible(false);            self.attr_bg[i].view:setIsVisible(false)        end        self.xilian_btn:setCurState( CLICK_STATE_DISABLE )        self.zhizunxilian_btn:setCurState( CLICK_STATE_DISABLE )        --self.lab_need_money:setText( "" )    end      self:update_need_money_label()   end-- 根据一个序列号获取一个item的战力,参数：第一个是序列号，用于获取动态数据。-- 注意，第二个参数看上去多余，实际上因为要计算下一级的战斗力，并且动态数据（例如宝石）是一样的，只是item_id不同。所以特别要传一个item_idfunction ZhuangBeiXiLian:get_atta_value_by_series( item_series , item_id)    return UserInfoModel:calculate_equip_attack_by_item_id( item_series, item_id )end-- 发送处理装备协议function ZhuangBeiXiLian:send_request_upgrade( do_type ,param_count,param_arr)    ForgeWin:set_if_waiting_result( true )    ForgeWin:set_if_waiting_reflash( true )    local item_count = 1                                                        -- 物品个数    local id_items   = { _left_slotitem_item_source.item_series}              -- 物品的序列号    local htype      = do_type                                                     -- 操作类型,装备提品                                      print("send_request_upgrade...........................................",item_count, id_items, htype)    ItemCC:req_handle_item (item_count, id_items, htype, param_count, param_arr)end--================================================================================================================================--================================================================================================================================----右侧----================================================================================================================================--================================================================================================================================---创建右侧panelfunction ZhuangBeiXiLian:create_right_panel( pos_x, pos_y, width, height, texture_name )    local panel = CCBasePanel:panelWithFile( pos_x, pos_y, width, height, texture_name, 500, 500 )    self.r_up_but_t = {}               -- 按钮做成单选用,需要操作所有按钮，设置状态    self:create_bag_slot( panel )    self.panel_t["right_panel"] = panel                   --存入table，用于动态修改    -- 默认选中1    self:but_select_one( "right_up", 1 )    return panelend--创建右侧物品栏的一个item 和 信息。因为和左侧物品处理方式不一样，要分开写一个方法。--参数：父panel、物品id（当使用默认图标时，使用nil）、坐标、大小、num表示等级或者数量local row_index_count = 1         -- 存储入self.row_t 的序号，用来防止多次创建，key重复，造成scroll销毁，通知从self.row_t删除。而新建的也被删了。--创建背包中的可升级物品slotitem:参数：要加入的面板， 物品的类型（宝贝，翅膀等 ）function ZhuangBeiXiLian:create_bag_slot( panel )    --坐标计算    local slot_beg_x = 20         --起始x坐标    local slot_beg_y = 255        --起始x坐标    local slot_int_x = 100        --横坐标间隔    local slot_int_y = 45         --纵坐标间隔        --遍历玩家装备    require "config/ItemConfig"    local check_info = nil;    if ( _r_up_equi_or_bag == "equipment" ) then        check_info = UserInfoModel:get_equi_info()        --所有装备信息    elseif ( _r_up_equi_or_bag == "bag" ) then        check_info = ItemModel:get_bag_data();    end    local equip = nil    local place_index = 1                                      --这里物品不是每个都显示的，所以位置要分开计数    -- local item_base = nil                                      --基础item数据，用来获取物品的公共属性    local check_table = {}                                     -- 判断是否可以升级的table    local slotItem_t = {}    local slot_par = {}    --print("#check_info",#check_info);    -- for i , v in ipairs(check_info) do    --     print("i",i,v.item_id);       -- end    for k,v in pairs(check_info) do        equip = v        local item_base = ItemConfig:get_item_by_id(equip.item_id);        -- 获取装备的基础信息        -- 判断该id是否可以升级        if item_base.type >0 and item_base.type < 11 and item_base.color > 2 and item_base.conds[1].value >=40 then            --slot_par[ #slot_par + 1] = { equip.item_id, 15, 15 , 55, 55, equip.strong, equip.series }            slot_par[#slot_par + 1] = { equip.series, equip.strong, equip.item_id }        end    end    --print("#slot_par",#slot_par)    local scroll = self:create_scroll_area( slot_par, _t_scroll_item_info.x - 5, _t_scroll_item_info.y, _t_scroll_item_info.width,        _t_scroll_item_info.height, _t_scroll_item_info.x_num, 4, nil )     scroll:setScrollLump(UILH_COMMON.up_progress, UILH_COMMON.down_progress, 10, 18, 105)    scroll:setScrollLumpPos(_t_scroll_item_info.width)    --local scroll = self:create_scroll_area( slot_par, 0, 15, 426, 295+12, 2, 4, nil)    panel:addChild( scroll )    local _t_scrol_lump_down_img = ZImage:create( panel, UILH_COMMON.scrollbar_down, _t_scroll_item_info.x - 5 + _t_scroll_item_info.width ,        _t_scroll_item_info.y - 5, -1, -1)    local _t_scroll_lump_up_img = ZImage:create( panel, UILH_COMMON.scrollbar_up, _t_scroll_item_info.x - 5 + _t_scroll_item_info.width,        _t_scroll_item_info.y + _t_scroll_item_info.height-5, -1, -1)    self.r_down_scroll = scrollend-- 创建可拖动区域   参数：放入scroll的panel的集合, 坐标， 区域大小，列数， 背景名称function ZhuangBeiXiLian:create_scroll_area( panel_table_para ,pos_x, pos_y, size_w, size_h, colu_num, sight_num, bg_name)    local row_num = #panel_table_para / colu_num - #panel_table_para / colu_num % 1    -- local scroll = CCScroll:scrollWithFile(pos_x, pos_y, size_w, size_h, sight_num, colu_num, row_num + 1, bg_name, TYPE_VERTICAL, 500,500)    -- scroll:setEnableCut(true)    local _scroll_info = { x = pos_x, y = pos_y, width = size_w, height = size_h, maxnum = row_num + 1, image = bg_name, stype = TYPE_HORIZONTAL }    local scroll = CCScroll:scrollWithFile( _scroll_info.x, _scroll_info.y, _scroll_info.width, _scroll_info.height, _scroll_info.maxnum, _scroll_info.image, _scroll_info.stype )    --scroll:setScrollLump(UIResourcePath.FileLocate.common .. "up_progress.png", UIResourcePath.FileLocate.common .. "down_progress.png", 4, 40, size_h / 2)    local had_add_t = {}    local function scrollfun(eventType, args, msg_id)        if eventType == nil or args == nil or msg_id == nil then             return        end        if eventType == TOUCH_BEGAN then            return true        elseif eventType == TOUCH_MOVED then            return true        elseif eventType == TOUCH_ENDED then            return true        elseif eventType == SCROLL_CREATE_ITEM then            local temparg = Utils:Split(args,":")            local x = temparg[1]              -- 行            local index = x * colu_num             local row_h = 93            local t_dis_y = 3            local row_w = _t_scroll_item_info.width            local bg_vertical = CCBasePanel:panelWithFile( 0, t_dis_y / 2, row_w, row_h, "")            local colu_with = 190            local indent_x = 22   --缩进            local space_x = ( _t_scroll_item_info.width - colu_with * 2 ) / 5   --列距            for i = 1, colu_num do                if panel_table_para[index + i] then                    local bg = self:create_item_show_panel( panel_table_para[index + i],                     (i - 1) * colu_with + space_x * i, 0, colu_with, row_h )                    bg_vertical:addChild(bg.view)                else                    local bg = CCBasePanel:panelWithFileS(CCPointMake(0,0),CCSizeMake(colu_with, row_h), nil)                    bg_vertical:addChild(bg)                end                -- local line = CCZXImage:imageWithFile( 5, 0, size_w-10, 1, UIResourcePath.FileLocate.common .. "white_line2.png")     -- 分割线 white_line.png                -- bg_vertical:addChild(line)            end                        local item = CCBasePanel:panelWithFile( 0, 0, row_w, row_h + t_dis_y, "")            item:addChild(bg_vertical)            scroll:addItem(item)            scroll:refresh()            return false        end    end    scroll:registerScriptHandler(scrollfun)    scroll:refresh()    return scrollendfunction ZhuangBeiXiLian:unselect_all_item()    for k,show_item_panel in pairs(self.right_item_t) do        show_item_panel.set_selected(false)    endend-- 创建一个道具显示面板function ZhuangBeiXiLian:create_item_show_panel( panel_date, x, y, w, h )    local item_series = panel_date[1]    local num = panel_date[2]    item_id = panel_date[3]    --_level_need = num    --print("Transfer:create_item_show_panel num",num, item_series)    if self.right_item_t[item_series] then        -- 所有道具展示面板[item_series] then        -- 设置品质特效 /hcl/on 2013/7/17-----------------------------------        local item_date = ForgeModel:get_item_in_bag_or_body( item_series )        local item_base = ItemConfig:get_item_by_id( item_date.item_id )        local pj = ItemModel:get_item_pj( item_base )        self.right_item_t[item_series].slot_item:set_item_quality(item_date.void_bytes_tab[1],pj);        -------------------------------------------------------------------------        return self.right_item_t[item_series]    end    local show_item_panel = {}    local show_item_panel_bg = CCBasePanel:panelWithFile( x, y , w, h, UILH_COMMON.bg_10, 500, 500 )    show_item_panel.view = show_item_panel_bg    -- local itemBg = CCZXImage:imageWithFile(x+14, y+12, 70, 70, UIPIC_FORGE_029)    -- show_item_panel:addChild(itemBg)    local slotItem = MUtils:create_one_slotItem( nil, 15, 20, 64, 64 )    --创建slotitem    slotItem.view:setScale( 50 / 60 )    show_item_panel.view:addChild( slotItem.view )    --print("item_series",item_series)    local item_date = ForgeModel:get_item_in_bag_or_body( item_series )    slotItem.set_date( item_date )    local item_base = ItemConfig:get_item_by_id( item_date.item_id )    local pj = ItemModel:get_item_pj( item_base )    -- 设置品质特效    slotItem:set_item_quality(item_date.void_bytes_tab[1],pj);    -- 单击回调    local function f1()        self:set_left_item( item_date, item_series)        self:unselect_all_item()        show_item_panel.set_selected(true)        --self:set_r_up_one_slot_disable( slotItem  )        --ForgeModel:set_strengthen_item_series( item_series )    end    local function f2(eventType)        if eventType == TOUCH_CLICK then            self:set_left_item( item_date, item_series)            self:unselect_all_item()            show_item_panel.set_selected(true)        end           end       -- 显示信息:名称和数字    local strong_lable = nil    if item_date then        local item_name = ForgeModel:get_item_name_with_color( item_date.item_id )        local name_lable = UILabel:create_lable_2( item_name, 75, 55, font_size, ALIGN_LEFT )        show_item_panel.view:addChild( name_lable )                strong_lable = UILabel:create_lable_2( LangGameString[1018]..item_date.strong, 75, 20, font_size, ALIGN_LEFT ) -- [1018]="#cffff00强化 +"        show_item_panel.view:addChild( strong_lable )     end    local selected_bg = CCBasePanel:panelWithFile(0, 0, w, h, UILH_COMMON.slot_focus, 500, 500)    show_item_panel.view:addChild(selected_bg)    selected_bg:setIsVisible(false)    show_item_panel.set_selected = function( show_flash )        selected_bg:setIsVisible(show_flash)    end    -- 设置该道具为选中状态     show_item_panel.set_state = function( if_selected )        if if_selected then            -- slotItem:set_slot_disable(  )            show_item_panel.set_selected(true)        else            -- slotItem:set_slot_enable(  )            show_item_panel.set_selected(false)        end    end    -- 如果和选中的装备是同一个，就设置道具为不可选状态    if ForgeModel:check_is_strengthen_item( item_series ) then        -- slotItem:set_slot_disable(  )        show_item_panel.set_selected(true)    end    -- 重新更新数据    show_item_panel.update_date = function(  )        local item_date_temp = ForgeModel:get_item_in_bag_or_body( item_series )        slotItem.set_date( item_date_temp )        -- 选中状态        if ForgeModel:check_is_strengthen_item( item_series ) then            -- slotItem:set_slot_disable(  )            show_item_panel.set_selected(true)        end        if item_date_temp then            strong_lable:setString( LangGameString[1018]..item_date_temp.strong ) -- [1018]="#cffff00强化 +"        end    end    slotItem:set_click_event(f1)    show_item_panel.view:registerScriptHandler(f2)    show_item_panel.item_series = item_series    show_item_panel.slot_item = slotItem;    safe_retain(show_item_panel.view)    self.right_item_t[item_series] = show_item_panel    return show_item_panelend-- 检查某一个sereies是否和选中的一样，如果一样，在创建之后，就设置为不可按状态function ZhuangBeiXiLian:check_create_slot_if_sele( slotItem )    if slotItem.item_series == _left_slotitem_item_source.item_series then        self:set_r_up_one_slot_disable( slotItem )    endendfunction ZhuangBeiXiLian:get_attr_color( attr_type,attr_value )    return EquipEnhanceConfig:get_attr_color( attr_type ,attr_value )endfunction ZhuangBeiXiLian:destroy()    for key, show_item_panel in pairs(self.right_item_t) do         safe_release(show_item_panel.view)    end    Window.destroy(self)end--刷新右侧所有item. function ZhuangBeiXiLian:flash_all_item_right( )    self:remove_all_item_right( )    self:create_bag_slot( self.panel_t["right_panel"] )end--清空右侧面板所有itemfunction ZhuangBeiXiLian:remove_all_item_right( )    local panel  = self.panel_t["right_panel"]           --默认上面的装备面板    local item_table = self.right_item_t                 --上面所有item的table         for key, slotitem in pairs(item_table) do        safe_release( slotitem.view )    end    panel:removeChild(self.r_down_scroll, true)     self.right_item_t = {}                                      -- 清空以后，表也要清空    self.show_item_panel_t = {}end-- -- 设置制定slot为无效效状态function ZhuangBeiXiLian:set_r_up_one_slot_disable( slotItem  )    -- 必须先设置其他为有效装备    for i, slot in pairs(self.right_item_t) do         slot:set_slot_enable()    end    slotItem:set_slot_disable( )end-- 设置材料栏某个item可以点击function ZhuangBeiXiLian:set_r_up_one_slot_able( item_series )    for i, slot in pairs(self.right_item_t) do         if slot.item_series == item_series then            slot:set_slot_enable()        end    endend-- 设置锁function ZhuangBeiXiLian:set_slot_lock( item_series, slotItem )    if item_series == nil and slotItem then        slotItem:set_lock(false)        return    end    if _r_up_equi_or_bag == "equipment" then        local item = UserInfoModel:get_equi_by_id( item_series )        if item then            slotItem:set_lock(item.flag == 1)        end    else        local item = ItemModel:get_item_by_series( item_series )        if item then            slotItem:set_lock(item.flag == 1)        end    endend-- 测试tipsfunction ZhuangBeiXiLian:show_tool_tips_left(  type )    local extend_date = {}    if "source" == type then        ToolTipMgr( "item", _left_slotitem_item_source.item_id, extend_date)    elseif "target" == type then        ToolTipMgr( "item", _left_slotitem_item_target.item_id, extend_date)    else        ToolTipMgr( "item", _left_slotitem_item_need.item_id, extend_date)    end    endfunction ZhuangBeiXiLian:show_tool_tips_rihgt(  item_id )    local extend_date = {}    ToolTipMgr( "item", item_id,extend_date)end-- 设置按钮状态（实现单选），参数：位置标记，按钮序列号function ZhuangBeiXiLian:but_select_one( place, index )    local but_table = {}    if place == "right_up" then        but_table = self.r_up_but_t    end    for i, v in ipairs( but_table ) do        v:setCurState( CLICK_STATE_DOWN )    end    if but_table[ index ] then        but_table[ index ]:setCurState( CLICK_STATE_UP )    endend-- 更新洗炼属性function ZhuangBeiXiLian:update_xilianshuxing( item_series )    print("update_xilianshuxing item_series",item_series)    local user_item = nil;      if ( _r_up_equi_or_bag == "equipment" ) then        user_item = UserInfoModel:get_equi_by_id( item_series )    elseif ( _r_up_equi_or_bag == "bag" ) then        user_item = ItemModel:get_item_by_series( item_series )    end     -- 设置洗炼属性    for i=1,3 do        local smith = user_item.smiths[i];        self.attr_view_table[i]:setIsVisible(true);        if ( i<= user_item.smith_num ) then            local color ,is_max_attr = self:get_attr_color( smith.type,smith.value );            self.is_max_attr_table[i] = is_max_attr;            local str = color..staticAttriTypeList[smith.type].."  +"..math.abs(smith.value);            if ( is_max_attr ) then                str = str .. LangGameString[1046]; -- [1046]="(满)"            end             self.attr_view_table[i]:setText( str );        else            self.is_max_attr_table[i] = false;        end    end     self:update_need_money_label()end-- 开一个新属性function ZhuangBeiXiLian:update_jihuo( item_series )    local user_item = nil;      if ( _r_up_equi_or_bag == "equipment" ) then        user_item = UserInfoModel:get_equi_by_id( item_series )    elseif ( _r_up_equi_or_bag == "bag" ) then        user_item = ItemModel:get_item_by_series( item_series )    end     self:set_left_item( user_item, item_series);endfunction ZhuangBeiXiLian:active( show )     print("ZhuangBeiXiLian:active( show ) ")    if ( VIPModel:get_vip_info( ).level>=5 ) then         self.zhizunxilian_btn:setIsVisible(true);    else        self.zhizunxilian_btn:setIsVisible(false);    endendfunction ZhuangBeiXiLian:is_have_max_attr_not_lock( fun )    for i=1,3 do        if ( self.is_max_attr_table[i] and self.is_lock_table[i] == 0 ) then            NormalDialog:show("当前洗炼属性中有满属性值没有锁定，继续洗炼有可能丢失该属性，确认继续洗炼吗？",fun)            return;        end    end    fun();endfunction ZhuangBeiXiLian:update_need_money_label()    local free_xilian_count = ForgeModel:get_free_xilian_count();    if ( free_xilian_count > 0 ) then         self.lab_need_money:setText( "#cfff000今日可免费洗炼"..free_xilian_count.."次" );        self.xilian_btn:setText(Lang.forge.tab_eight.normal_xilian)    else        print("self.lock_num = ",self.lock_num);        local money = EquipEnhanceConfig:get_xl_need_money( self.lock_num )        self.lab_need_money:setText( LangGameString[1043]..money..LangGameString[414] ); -- [1043]="#cfff000手续费：" -- [414]="元宝"        self.xilian_btn:setText(Lang.forge.tab_eight.normal_xilian2)    endendfunction ZhuangBeiXiLian:get_user_item( item_series )    local user_item = nil;    if ( _r_up_equi_or_bag == "equipment" ) then        user_item = UserInfoModel:get_equi_by_id( item_series )    elseif ( _r_up_equi_or_bag == "bag" ) then        user_item = ItemModel:get_item_by_series( item_series )    end     return user_itemend