-- Transfer.lua-- created by lyl on 2012-12-13-- 炼器--强化转移面板super_class.Transfer(Window)local _left_slotitem_item_source = nil   --左侧源item，保存起来，动态修改local _left_slotitem_item_target = nil   --左侧目标item，保存起来，动态修改local _left_slotitem_item_target_focus = nil-- 序列号的集合。批量合成使用local _series_t = {}local _t_scroll_item_info = {}--item 的type，表示装备的号码。用于某件物品是否是装备判断local _equi_num_t = { [1] = true, [2] = true, [3] = true, [4] = true,                      [5] = true, [6] = true, [7] = true, [8] = true,                      [9] = true, [10] = true,[15] = true, }--攻击宝石的id集合，用来判断某件物品是否是攻击宝石[18519] = true ,local _attr_gem_num_t = { [18510] = true, [18511] = true, [18512] = true, [18513] = true,                    [18514] = true, [18515] = true, [18516] = true, [18517] = true,                    [18518] = true ,}--防御宝石的id集合，用来判断某件物品是否是防御宝石local _prot_gem_num_t = { [18520] = true, [18521] = true, [18522] = true, [18523] = true,                    [18524] = true, [18525] = true, [18526] = true, [18527] = true,                    [18528] = true, [18529] = true, [18530] = true, [18531] = true,                    [18532] = true, [18533] = true, [18534] = true, [18535] = true,                    [18536] = true, [18537] = true, [18538] = true, [18539] = true,}--生命宝石的id集合，用来判断某件物品是否是生命宝石local _hp_gem_num_t = { [18540] = true, [18541] = true, [18542] = true, [18543] = true,                    [18544] = true, [18545] = true, [18546] = true, [18547] = true,                    [18548] = true, [18549] = true ,}--记录右侧装备区，是背包还是人物状态.默认时人物local _r_up_equi_or_bag = "equipment"local _had_show_explain = false             --标记为未显示  说明面板local _item_num_need    = 0                 --需要物品的数量.  记录合成物品下面的数量显示local _item_num_have    = 0                 --选中物品的数量local _pay_for_synth    = 0                 --手续费local _level_need       = 999999            -- 目标物品不能高于的强化等级。local _level_min        = 1                 -- 目标物品最小强化等级。源物品选择不允许显示0级，选择源物品后，可以选择0级local _slot_para_t      = {}                -- 创建slot的参数。function Transfer:__init(  )    self.panel_t = {}                  --存储panel的表。用于改变panel内容    self.label_t = {}                  --存储label的表。用于改变label显示的内容    self.right_item_t = {}             --存储右侧上部分的所有item。用于清空处理    self.show_item_panel_t = {}        -- 所有道具展示面板    self.r_up_scroll = nil    self.r_down_scroll = nil    _t_scroll_item_info.x = 10    _t_scroll_item_info.y = 18    _t_scroll_item_info.width = 430 - _t_scroll_item_info.x * 2    _t_scroll_item_info.height = 488 - _t_scroll_item_info.y * 2    _t_scroll_item_info.x_num = 2    -- 创建个区域的面板    self.view:addChild( self:create_left_panel( 428, 10, 430, 488, UILH_COMMON.bottom_bg ) )             --左侧    self.view:addChild( self:create_right_panel( 10, 10, 420, 488, UILH_COMMON.bottom_bg ) )       --右侧end--刷新所有panel，当强化结束，服务器通知物品发生改变，就被调用刷新-- function Transfer:flash_all_item( )--     self:syn_sele_item()--     -- self:flash_all_item_right()-- endfunction Transfer:syn_date(  )    self:syn_sele_item()    self:flash_all_item_right()endfunction Transfer:update( update_type )    -- print("强化转移更新。。。。。。", update_type)    if update_type == "all" then        -- LuaEffectManager:stop_view_effect( 11008,self.view)        -- LuaEffectManager:play_view_effect( 11008,640,290,self.view,true,10  );        -- self:set_left_item( "source", 0, nil, nil)    -- 每次打开都清空选中装备        -- self:set_left_item( "target", 0, nil, nil)        self:set_left_item( "source", nil)    -- 每次打开都清空选中装备        self:set_left_item( "target", nil)        _level_need = 999999         -- 最大等级设置成 很大很大 ，让刷新后所有物品都可以显示        _level_min = 1               -- 清楚源物品后，再次选择，就是选择源物品，源物品不允许选0级的，所以设置为1    end    self:syn_sele_item()    self:flash_all_item_right()end-- 同步选中装备的最新属性(重新从人物或者背包model获取数据)function Transfer:syn_sele_item(  )    local item_series = _left_slotitem_item_source.item_series    local item = ItemModel:get_item_by_series( item_series )    if item ~= nil then        self:set_left_item("source", item)        --self:set_left_item("source", item.item_id, item.strong, item.series  )        _level_need = item.strong     -- 设置右侧item刷新需要的等级    else        -- print("~!!! !!! error ！！！ 选中的 源 物品已经不存在！！ ！！")        self:set_left_item( "source", nil)        self:set_left_item( "target", nil)        -- self:set_left_item( "source", 0, nil, nil)        -- self:set_left_item( "target", 0, nil, nil)    end    item_series = _left_slotitem_item_target.item_series    local item = ItemModel:get_item_by_series( item_series )    if item ~= nil then        self:set_left_item("target", item )        --_left_slotitem_item_target_focus.view:setIsVisible(true)        --self:set_left_item("target", item.item_id, item.strong, item.series  )    else        -- print("~!!! !!! error ！！！ 选中的 目标 物品已经不存在！！ ！！")        self:set_left_item( "target", nil)        --_left_slotitem_item_target_focus.view:setIsVisible(false)        --self:set_left_item( "target", 0, nil, nil)    end    end-- 返回每个panel，用于炼器主截面清除所有内容。切换界面的时候用function  Transfer:get_all_panel()    return { self.panel_t["left_panel"], self.panel_t["right_panel"] }end--================================================================================================================================--================================================================================================================================----左侧----================================================================================================================================--================================================================================================================================--创建左侧panelfunction Transfer:create_left_panel( pos_x, pos_y, width, height, texture_name )    local panel = CCBasePanel:panelWithFile( pos_x, pos_y, width, height, texture_name, 500, 500 )    -- 点击其他地方，消除操作结果。测试暂时使用    -- local function f1(eventType,x,y)    --     if self.label_t[ "result_label" ] then    --         self.label_t[ "result_label" ]:setString("")    --     end    -- end    -- panel:registerScriptHandler(f1)    --注册    -- local bg_ima_01 = CCZXImage:imageWithFile( 2, 2, 313, 349, UIResourcePath.FileLocate.forge .. "bg_image.jpg" );                      -- 背景图片，鼎    -- panel:addChild( bg_ima_01 )    -- local bg_ima_02 = CCZXImage:imageWithFile(30 - 14, 170-7, 84, 84, UIResourcePath.FileLocate.forge .. "slot_bg_01.png" );       -- 框框，下同    -- panel:addChild( bg_ima_02, 10 )    -- local bg_ima_03 = CCZXImage:imageWithFile( 225 + 10 - 14, 170-7, 84, 84, UIResourcePath.FileLocate.forge .. "slot_bg_01.png" );      -- panel:addChild( bg_ima_03, 10 )    -- local t_bg_l = ZImage:create( panel, UILH_FORGE.bg, 1, 0, -1, -1 )    -- local t_bg_r = ZImage:create( panel, UILH_FORGE.bg, 214, 0, -1, -1 )    -- t_bg_r.view:setFlipX(true)    local arrow_img = ZImage:create( panel, UILH_COMMON.right_arrows, 210, 295, -1, -1 )    --左侧item。  初始化的时候，图标都是使用默认图标。传入nil    _left_slotitem_item_source = self:create_item( panel, nil, 95, 280, 64, 64, "source" )          --原始item    _left_slotitem_item_source.view:setScale( 68 / 60 )    _left_slotitem_item_source:set_icon_bg_texture( UILH_COMMON.slot_bg, -9, -9, 83, 83)    ZImage:create(_left_slotitem_item_source.icon_bg, UILH_FORGE.zb_img, 25, 34, -1, -1)    _left_slotitem_item_target = self:create_item( panel, nil, 300, 280, 64, 64, "target" )         --结果item    _left_slotitem_item_target.view:setScale( 68 / 60 )    _left_slotitem_item_target:set_icon_bg_texture( UILH_COMMON.slot_bg, -9, -9, 83, 83 )    ZImage:create(_left_slotitem_item_target.icon_bg, UILH_FORGE.zb_img, 25, 34, -1, -1)    _left_slotitem_item_target_focus = ZImage:create( panel, UILH_NORMAL.light_grid, 284, 262, 105, 107 )    _left_slotitem_item_target_focus.view:setIsVisible(false)    -- 手续费    local label_temp = ZLabel:create( nil, "", 130, 200 )    --UILabel:create_label_1("", CCSize(150,40), 155, 100, 15, CCTextAlignmentCenter, 220, 87, 154)    self.label_t[ "pay_label" ]  = label_temp.view            --存储起来，使用关键字获取并修改显示内容    panel:addChild( label_temp.view )    -- 转移按钮  :对于不用在其他代码位置获取的按钮，直接使用数字命名，方便复制到其他位置使用    local but_1 = CCNGBtnMulTex:buttonWithFile( 0, 0, -1, -1, UILH_COMMON.lh_button2 )    local but_1_size = but_1:getSize()    but_1:setPosition( ( width - but_1_size.width ) / 2, 60 )    but_1:addTexWithFile(CLICK_STATE_DISABLE, UILH_COMMON.lh_button2_disable)    --but_1:addTexWithFile(CLICK_STATE_DOWN, UIResourcePath.FileLocate.common .. "button_red.png")    -- but_1:addTexWithFile(CLICK_STATE_DISABLE, "ui/common/button_bg02_s.png")    local function but_1_fun(eventType,x,y)        if eventType == TOUCH_CLICK then             self:send_request_transfer()        end        return true    end    but_1:registerScriptHandler(but_1_fun)    --注册    panel:addChild(but_1)    local btn_name = ZLabel:create( but_1, LH_COLOR[2] .. Lang.forge.tab_four.transfer_lab, 0, 0)    local btn_name_size = btn_name:getSize()    btn_name:setPosition( ( but_1_size.width - btn_name_size.width ) / 2, 20 )    --按钮显示的名称    -- local name_image = CCZXImage:imageWithFile( 65.5, 21, -1, -1, UIResourcePath.FileLocate.forge .. "zhuangyi.png" );     -- name_image:setAnchorPoint(0.5,0.5);    -- but_1:addChild( name_image )    but_1:setCurState( CLICK_STATE_DISABLE )     self.transfer_but = but_1    -- -- 转移说明 按钮 :对于不用在其他代码位置获取的按钮，直接使用数字命名，方便复制到其他位置使用    -- -- local but_2 = CCNGBtnMulTex:buttonWithFile( 10, 10, 25, 25, "ui/common/question_mark.png", 500, 500)    -- -- but_2:addTexWithFile(CLICK_STATE_DOWN, "ui/common/question_mark.png")    -- -- but_2:addTexWithFile(CLICK_STATE_DISABLE, "ui/common/question_mark.png")    -- local function but_2_fun(eventType,x,y)    --     if eventType == TOUCH_CLICK then     --         -- self:control_explain( )    --         local explain_content = LangGameString[1025].. -- [1025]="#c66FF661.装备可向比#cffff00自身强化等级低#c66FF66的装备进行强化转移，#cffff00不限部位和装备等级#r#r"    --                         LangGameString[1026] -- [1026]="#c66FF662.强化转移后，原装备的强化等级会转移给新的装备，原装备的强化等级变为#cffff000#r#r"    --         ForgeModel:show_help_panel( "ui/forge/zhuangyishuoming.png", Lang.forge.transfer_info )    --         return true    --     end    --     return true    -- end    -- -- but_2:registerScriptHandler(but_2_fun)    --注册    -- local but_2 = MUtils:creat_mutable_btn( 5, 315 ,{x=0, y=0, w=28, h=28}, UIResourcePath.FileLocate.normal .. "common_question_mark.png",{x=30, y=2, w=83, h=18},    --  UIResourcePath.FileLocate.forge .. "zhuangyishuoming.png", but_2_fun )    -- panel:addChild(but_2)    -- 强化帮助按钮    local function help_btn_callback( ... )        -- print("help_btn click")        ForgeModel:show_help_panel( UILH_FORGE.zy_notic, Lang.forge.transfer_info )    end    local help_panel = ZBasePanel:create( panel, "", 280 + 8, 245 + 189, 115, 40 )    help_panel:setTouchClickFun(help_btn_callback)    local help_btn = ZButton:create(help_panel, UILH_NORMAL.wenhao, help_btn_callback, 0, 0, -1, -1)    local help_btn_size = help_btn:getSize()    local help_img = ZImage:create(help_btn, UILH_FORGE.zy_img, 0, 0, -1, -1 )    local help_img_size = help_img:getSize()    help_img:setPosition( help_btn_size.width, ( help_btn_size.height - help_img_size.height ) / 2 )    --按钮显示的名称    -- local name_image = CCZXImage:imageWithFile( 35, 12, 63, 18, "ui/forge/zhuangyishuoming.png" );     -- panel:addChild( name_image )    _had_show_explain = false             --标记为未显示说明    -- local arrow = CCZXImage:imageWithFile( 130, 242, 109, 37, "ui/forge/arrow.png" );  -- 箭头    -- panel:addChild( arrow )    self.panel_t["left_panel"] = panel        --存入table，用于动态修改    return panelend-- 创建一个item 包括slotitem和信息 function Transfer:create_item( panel, item_series, po_x , po_y, size_w, size_h ,type)    -- local slotItem = SlotItem(size_w, size_h)    -- slotItem:set_icon_bg_texture(UIPIC_COMMON_FY_003,  -6 ,  -6, size_w+12, size_h+12 )   -- 背框    local slotItem = MUtils:create_equip_slotItem( nil, po_x, po_y, size_w, size_h, UIPIC_FORGE_029 )    --获取item_id 。默认用一个不存在的id  0，可以去到默认图标    local item_id = 0    -- slotItem:set_icon( item_id )    -- slotItem:setPosition( po_x , po_y )    --设置回调单击函数    local function f1()        if "source" == type then            self:set_left_item( "source", nil)            self:set_left_item( "target", nil)            -- self:set_left_item( "source", 0, nil, nil)            -- self:set_left_item( "target", 0, nil, nil)            _level_need = 999999         -- 最大等级设置成 很大很大 ，让刷新后所有物品都可以显示            _level_min = 1               -- 清楚源物品后，再次选择，就是选择源物品，源物品不允许选0级的，所以设置为1            self:flash_all_item_right()        elseif "target" == type then            self:set_left_item( "target", nil)            -- self:set_left_item( "target", 0, nil, nil)            if _left_slotitem_item_source.strong_level then                _level_need = _left_slotitem_item_source.strong_level            end            self:flash_all_item_right()        end    end    slotItem:set_double_click_event( f1 )    local function f2( ... )        local a, b, arg = ...        local position = Utils:Split(arg,":");            -- 将相对坐标转化成屏幕坐标(即OpenGL坐标 800x480)        local pos = slotItem.view:getParent():convertToWorldSpace( CCPointMake(position[1],position[2]) );        --ForgeModel:show_item_tips( slotItem.item_id, pos.x, pos.y )        local user_item = ItemModel:get_item_by_series( slotItem.item_series )        TipsModel:show_tip( pos.x, pos.y,user_item )    end    slotItem:set_click_event( f2 )    panel:addChild( slotItem.view )    -- 加默认提示字    -- slotItem.default_word = UILabel:create_label_1("装备", CCSize(100,15), 30, 30, 12, CCTextAlignmentCenter, 255, 255, 0)        -- slotItem.default_word = CCZXImage:imageWithFile( 0, 0, 55, 55, UIResourcePath.FileLocate.role .. "text_zhuangbei.png" )    -- slotItem.view:addChild( slotItem.default_word )           --因为lable要随slot共存亡，所以是添加到slot的view中    --需要item存储一下选中的slot的数据。初始化设置为nil(起始可以不写，这里是为了有一种"定义了的"印象)    slotItem.level       = nil    slotItem.item_series = nil    slotItem.item_id     = nil    return slotItemend--说明的控制函数function Transfer:control_explain( )    -- 说明内容    local explain_content = LangGameString[1027]..                            LangGameString[1028]..                             LangGameString[1029]     if _had_show_explain  then        self:remove_explain_panel()    else        self:show_explain_panel( explain_content )    endend-- 显示说明function Transfer:show_explain_panel( explain_content )    -- local bg_x = 10    -- local bg_y = 10        -- self.explain_bg = CCZXImage:imageWithFile( bg_x, bg_y, 280, 200, UIResourcePath.FileLocate.common .. "bg.png" )    -- self.panel_t["left_panel"]:addChild( self.explain_bg )    -- self.explain_title_bg = CCZXImage:imageWithFile( bg_x + 20, bg_y + 155, 220, 25, UIResourcePath.FileLocate.common .. "fenge_bg.png" )    -- self.panel_t["left_panel"]:addChild( self.explain_title_bg )        -- self.explain_title_name = CCZXImage:imageWithFile( bg_x + 110, bg_y + 160, 63, 18, UIResourcePath.FileLocate.forge .. "qianghuashuoming.png" )    -- self.panel_t["left_panel"]:addChild( self.explain_title_name )    -- self.explain_label = UILabel:create_label_1(explain_content, CCSize(230,140), bg_x + 150, bg_y + 85, 15, CCTextAlignmentLeft, 255, 255, 0)    -- self.panel_t["left_panel"]:addChild( self.explain_label )    -- -- self.explain_label:setString( explain_content )    -- self.explain_tail_line = CCZXImage:imageWithFile( bg_x + 20, bg_y + 10, 220, 1, UIResourcePath.FileLocate.common .. "fenge_bg.png" )    -- self.panel_t["left_panel"]:addChild( self.explain_tail_line )    -- _had_show_explain = trueend-- 删除说明function Transfer:remove_explain_panel(  )    if _had_show_explain == false then        return     end    self.panel_t["left_panel"]:removeChild( self.explain_bg, true )    self.panel_t["left_panel"]:removeChild( self.explain_title_bg, true )    self.panel_t["left_panel"]:removeChild( self.explain_title_name, true )    self.panel_t["left_panel"]:removeChild( self.explain_label, true )    self.panel_t["left_panel"]:removeChild( self.explain_tail_line, true )    _had_show_explain = falseend-- 设置左侧，item的属性:类型 字符串（ source, target ）,物品id(是基本属性，不是序列号，注意了)function Transfer:set_left_item( item_type, item )    local target_item = _left_slotitem_item_source    if item_type == "target" then        target_item = _left_slotitem_item_target    end    --xprint("Transfer:set_left_item item",item)    target_item.set_date( item )    if target_item.item_id ~= nil then        target_item.item_series = item.series    else        target_item.item_series = nil    end    if target_item.item_series and item_type == "source" then        if target_item.strong == nil then            target_item.strong = 0        end        self.label_t[ "pay_label" ]:setText(LangGameString[1030]..self:get_tran_need_meney(target_item.strong + 1)..LangGameString[411] ) -- [1030]="手续费：" -- [411]="仙币"    elseif  item_type ~= "target" then        self.label_t[ "pay_label" ]:setText( "")    end    self:check_action_but_able()end-- function Transfer:set_left_item( item_type, item_id, strong_level, item_series)--     local item = _left_slotitem_item_source                                   --左侧的源item--     if item_type == "target" then                     -- 若源item--         item = _left_slotitem_item_target --     end--     item.item_series  = item_series                                           --记录序列号，发送请求的时候需要--     item.item_id = item_id                                                    --记录物品id，发送请求的时候需要--     item.strong_level = strong_level                                          -- 强化等级--     self:set_slot_lock( item_series, item)--     -- item:set_icon( item_id )                                                  --设置图标--     -- 先判断 用该item_id是否能找到静态数据--     require "config/ItemConfig"--     local item_base = ItemConfig:get_item_by_id( item_id )--     if item_base then --         item:set_icon( item_id )                                              --设置图标--     else--         item:set_icon_texture( "" )                                           -- 如果找不到，就去掉背景图--     end--     -- 设置图标的强化等级--     if strong_level then--         item:set_strong_level( strong_level )--     else--         item:set_strong_level( 0 )--     end--     if item_series and item_type ~= "target" then--         self.label_t[ "pay_label" ]:setString(LangGameString[1030]..self:get_tran_need_meney(strong_level)..LangGameString[411] ) -- [1030]="手续费：" -- [411]="仙币"--     elseif  item_type ~= "target" then--         self.label_t[ "pay_label" ]:setString( "")--     end--     -- 边框颜色--     if "source" == item_type then--         _left_slotitem_item_source:set_color_frame( item_id, -3, -3, 62, 62 )                 -- 设置边框--     end--     if "target" == item_type then--         _left_slotitem_item_target:set_color_frame( item_id, -3, -3, 62, 62 )                 -- 设置边框--     end--     -- 是否显示提示字--     -- if item_series then--     --     item.default_word:setIsVisible(false)--     -- else--     --     item.default_word:setIsVisible(true)--     -- end--     self:check_action_but_able()--     -- 设置装备品质--     if ( item_id == 0) then--         if "source" == item_type then--             _left_slotitem_item_source:set_item_quality(nil);--         elseif "target" == item_type then--             _left_slotitem_item_target:set_item_quality(nil);--         end--     else--         local user_item = UserInfoModel:get_equi_by_id( item_series );--         if ( user_item ) then--             if "source" == item_type then--                 local pj = ItemModel:get_item_pj( item_base )--                 _left_slotitem_item_source:set_item_quality(user_item.void_bytes_tab[1],pj);--             elseif "target" == item_type then--                 local pj = ItemModel:get_item_pj( item_base )--                 _left_slotitem_item_target:set_item_quality(user_item.void_bytes_tab[1],pj);--             end--         end--     end-- end-- 根据强化等级，获取需要的花费function Transfer:get_tran_need_meney( level )    require "config/EquipEnhanceConfig"    local need_money_t = EquipEnhanceConfig:get_shift_need_money(  )    if need_money_t and need_money_t[level] then     -- 注意！！！装备强化石从0计数的，所以要+1(后续：但是，转移最小等级是1，根据静态数据是15个，所以不用+1)        return need_money_t[level]    end    return 0end-- 设置转移按钮是否可以有效function Transfer:check_action_but_able(  )    if _left_slotitem_item_source.item_series == nil or _left_slotitem_item_target.item_series == nil then         self.transfer_but:setCurState( CLICK_STATE_DISABLE )        _left_slotitem_item_target_focus.view:setIsVisible(false)    else        self.transfer_but:setCurState( CLICK_STATE_UP )        _left_slotitem_item_target_focus.view:setIsVisible(true)    endend-- 发送强化转移的消息function Transfer:send_request_transfer(  )    ForgeWin:set_if_waiting_result( true )    ForgeWin:set_if_waiting_reflash( true )    -- 如果源和目标都没有选择，就不发送    if _left_slotitem_item_source.item_series == nil or _left_slotitem_item_target.item_series == nil then         return     end    local item_count = 2                                                      -- 物品个数    local id_items   = { _left_slotitem_item_source.item_series, _left_slotitem_item_target.item_series}       -- 物品的序列号    local htype      = 5                                                      -- 操作类型    local param_count = 0    local param_arr  = {  }                                        ItemCC:req_handle_item (item_count, id_items, htype, param_count, param_arr)end--================================================================================================================================--================================================================================================================================----右侧----================================================================================================================================--================================================================================================================================---创建右侧panelfunction Transfer:create_right_panel( pos_x, pos_y, width, height, texture_name )    local panel = CCBasePanel:panelWithFile( pos_x, pos_y, width, height, texture_name, 500, 500 )    self:create_bag_slot( panel , _level_need, width, height )    -- 宝贝按钮  :对于不用在其他代码位置获取的按钮，直接使用数字命名，方便复制到其他位置使用    -- local but_1 = CCNGBtnMulTex:buttonWithFile( 2, 316, 215, -1, UIResourcePath.FileLocate.common .. "qd_bg2.png", 34, 15, 34, 15, 34, 15, 34, 15)    -- but_1:addTexWithFile(CLICK_STATE_DOWN, UIResourcePath.FileLocate.common .. "qd_bg2_d.png")    -- --but_1:addTexWithFile(CLICK_STATE_DISABLE, "ui/common/title_bg_01_n.png")    -- local function but_1_fun(eventType,x,y)    --     if eventType == TOUCH_CLICK then     --         self:flash_all_item_right()    --         return true    --     end    --     return true    -- end    -- but_1:registerScriptHandler(but_1_fun)                  --注册    -- panel:addChild(but_1)    -- --按钮显示的名称    -- local label_but_1 = UILabel:create_label_1(LangGameString[1001], CCSize(100,15), 135 ,  16, 15, CCTextAlignmentLeft, 255, 255, 0) -- [1001]="背包"    -- but_1:addChild( label_but_1 )      -- local btn_1       = ZImage:create(panel, string.format("%s%s",UIResourcePath.FileLocate.common,"quan_bg2.png"), 3, 145+61+116, 430, 28, 2,34, 15, 34, 15, 34, 15, 34, 15)    -- local label_but_1 = ZLabel:create(panel, LangGameString[1311], 3+430*0.5, 145-8+61+116+28*0.5, 15, ALIGN_CENTER, 3)      self.panel_t["right_panel"] = panel                   --存入table，用于动态修改    return panelend--创建右侧物品栏的一个item 和 信息。因为和左侧物品处理方式不一样，要分开写一个方法。--参数：父panel、物品id（当使用默认图标时，使用nil）、坐标、大小、num表示等级或者数量-- function Transfer:create_item_right( item_id, po_x , po_y, size_w, size_h , num, item_series)--     require "config/ItemConfig"--     local item = ItemConfig:get_item_by_id( item_id )     --获取item基本信息--     local slotItem = MUtils:create_equip_slotItem( nil, po_x , po_y, size_w, size_h, UIPIC_FORGE_029 )--     -- local slotItem = SlotItem(48, 48)             --创建slotitem--     -- slotItem:set_icon_bg_texture( UIResourcePath.FileLocate.normal .. "item_bg01.png",  -7, -7, 62, 62 )   -- 背框    --     if item_id == nil then--         item_id = 0                               --设置一个不存在的值，会获取到默认图标--     end--     -- slotItem:set_icon( item_id )--     -- self:set_slot_lock( item_series, slotItem)--     -- slotItem:set_color_frame( item_id, -4, -5, 57, 57 )--     -- slotItem:setPosition( po_x , po_y )--     if num then--         slotItem:set_strong_level( num )--     else--         slotItem:set_strong_level( 0 )--     end--     --设置回调单击函数--     local function f1()--         -- 判断转移源item是否已选，若已选，则要放到转移目标上--         if _left_slotitem_item_source.item_series == nil then--             self:set_left_item( "source", item )--             -- self:set_left_item( "source", item_id, num, item_series)--             _level_need = num     -- 设置右侧item刷新需要的等级--             _level_min = 0        -- 让目标item可以选择0强化等级的物品--             -- 这个界面，点击以后要干掉所有slot，创建新的，导致引擎轮询后面子节点为nil，所以要等到双击事件下一帧才刷新--             local callback_temp = callback:new()        --             local function callback_func()--                 print("create  3，所以")--             self:flash_all_item_right()--                 callback_temp:cancel()--             end--             print("create  2")--             callback_temp:start( 0, callback_func )            --         else--             self:set_left_item( "target", item )--             -- self:set_left_item( "target", item_id, num, item_series)--             self:set_r_up_one_slot_disable(slotItem);--         end--     end--     slotItem:set_double_click_event( f1 )--     local function f2( arg )--         local position = Utils:Split(arg,":");--             -- 将相对坐标转化成屏幕坐标(即OpenGL坐标 800x480)--         local pos = slotItem.view:convertToWorldSpace( CCPointMake(position[1],position[2]) );--         -- ForgeModel:show_item_tips( item_id, pos.x, pos.y )--         local user_item = ItemModel:get_item_by_series( item_series )--         TipsModel:show_tip( pos.x, pos.y,user_item )--     end--     slotItem:set_click_event( f2 )--     -- local function f2(  )--     --     self:show_tool_tips_rihgt(item_id)--     -- end--     -- slotItem:set_click_event( f2 )    --     --显示信息:名称和数字--     local dimensions = CCSize(100,15)--     local label_temp = UILabel:create_label_1(item.name, dimensions, 110,  40, 16, CCTextAlignmentLeft, 255, 255, 0)--     slotItem.name_label  = label_temp              --存储起来，使用关键字获取并修改显示内容--     slotItem.view:addChild( label_temp )           --因为lable要随slot共存亡，所以是添加到slot的view中--     require "UI/forge/ForgeCommon"--     ForgeCommon:set_label_color_by_type( item.color, label_temp )--     label_temp = UILabel:create_label_1(LangGameString[1031]..num, dimensions, 110, 5, 16, CCTextAlignmentLeft, 255, 255, 0) -- [1031]="强化 +"--     slotItem.num_label  = label_temp               --存储起来，使用关键字获取并修改显示内容--     slotItem.view:addChild( label_temp )           --因为lable要随slot共存亡，所以是添加到slot的view中--     -- panel:addChild( slotItem.view )--     self.right_item_t[ #self.right_item_t + 1 ] = slotItem--     local pj = ItemModel:get_item_pj( item )--     -- 设置装备品质--     local user_item = ItemModel:get_item_by_series( item_series )--     if ( user_item ) then--         print("pj = ",pj)--         slotItem:set_item_quality(user_item.void_bytes_tab[1],pj);--     end--     return slotItem-- end--创建背包中的可升级物品slotitem:参数：要加入的面板， 物品的等级要求(强化等级不能低于源物品)function Transfer:create_bag_slot( panel, level_need, width, height )    print("level_need, width, height",level_need, width, height)    --坐标计算    local slot_beg_x = 20         --起始x坐标    local slot_beg_y = 255        --起始x坐标    local slot_int_x = 100        --横坐标间隔    local slot_int_y = 45         --纵坐标间隔    local bag_items, bag_item_count = ItemModel:get_bag_data() --背包中物品的集合和数量    local item_bag = nil                                       --背包中存储的item数据，注意和基本item数据区分    local place_index = 1                                      --这里物品不是每个都显示的，要判断（类型，和是否合适装备使用），所以位置要分开计数    local item_base = nil                                      --基础item数据，用来获取物品的公共属性    local slotItem_t = {}    local slot_par = {}    require "config/ItemConfig"    local user_equi_info = UserInfoModel:get_bag_equip_attack_head()        --所有装备信息    --遍历背包中的所有装备，创建出item显示出来    for i = 1, bag_item_count do           item_bag = bag_items[i]        if item_bag then            item_base = ItemConfig:get_item_by_id( item_bag.item_id )        end        --判断是否是装备        -- 显示装备        if  item_bag and item_base and _equi_num_t[ item_base.type ] and item_bag.strong < level_need and item_bag.strong >= _level_min then             -- self:create_item_right( panel, item_bag.item_id, slot_beg_x + slot_int_x*  ((place_index - 1) % 4 ) , slot_beg_y - slot_int_y  * ((place_index - 1) / 4 - (place_index - 1)/4%1 ) , 40, 40, item_bag.strong, item_bag.series)            -- place_index = place_index + 1            slot_par[ #slot_par + 1] = { item_bag.series, item_bag.strong, item_bag.item_id }        end    end    -- for i = 1, bag_item_count do    --     item_bag = bag_items[i]    --     if item_bag then    --         item_base = ItemConfig:get_item_by_id( item_bag.item_id )    --     end    --     --判断是否是装备    --     -- 显示装备    --     if  item_bag and item_base and _equi_num_t[ item_base.type ] and item_bag.strong < level_need and item_bag.strong >= _level_min then     --         -- self:create_item_right( panel, item_bag.item_id, slot_beg_x + slot_int_x*  ((place_index - 1) % 4 ) , slot_beg_y - slot_int_y  * ((place_index - 1) / 4 - (place_index - 1)/4%1 ) , 40, 40, item_bag.strong, item_bag.series)    --         -- place_index = place_index + 1    --         slot_par[ #slot_par + 1] = { item_bag.item_id, 15, 15, 55, 55, item_bag.strong, item_bag.series }    --     end    -- end        _slot_para_t = slot_par      -- 动态创建scroll的时候用这些参数               if self.r_down_scroll then         print("Transfer:create_bag_slot  1", self.r_down_scroll)        local row_num = math.ceil( #_slot_para_t / 2 )         self.r_down_scroll:setMaxNum( row_num )        print("self.r_down_scroll:setMaxNum 不创建,只刷新 ", row_num)        self.r_down_scroll:refresh()    else         print("Transfer:create_bag_slot  2 创建", self.r_down_scroll)        self.r_down_scroll = self:create_scroll_area( slot_par, _t_scroll_item_info.x - 5, _t_scroll_item_info.y , _t_scroll_item_info.width,         _t_scroll_item_info.height, _t_scroll_item_info.x_num, 4, nil)        self.r_down_scroll:setScrollLump(UILH_COMMON.up_progress, UILH_COMMON.down_progress, 10, 18, 105)        self.r_down_scroll:setScrollLumpPos(_t_scroll_item_info.width - 10)        local _t_scrol_lump_down_img = ZImage:create( panel, UILH_COMMON.scrollbar_down, _t_scroll_item_info.x - 13 + _t_scroll_item_info.width - 2,            _t_scroll_item_info.y - 8, -1, -1)        local _t_scroll_lump_up_img = ZImage:create( panel, UILH_COMMON.scrollbar_up, _t_scroll_item_info.x - 13 + _t_scroll_item_info.width - 2,            _t_scroll_item_info.y + _t_scroll_item_info.height - 2, -1, -1)        panel:addChild( self.r_down_scroll )    endend-- 创建可拖动区域   参数：放入scroll的panel的集合（废弃，使用全局的变量）, 坐标， 区域大小，列数， 背景名称  function Transfer:create_scroll_area( panel_table_para ,pos_x, pos_y, size_w, size_h, colu_num, sight_num, bg_name)    -- local row_num = #panel_table_para / colu_num - #panel_table_para / colu_num % 1            local row_num = math.ceil( #_slot_para_t / colu_num )     -- print("~~~~!!!!!!创建可拖动区域", #panel_table_para, row_num)    local _scroll_info = { x = pos_x, y = pos_y, width = size_w, height = size_h, maxnum = row_num, image = bg_name, stype = TYPE_HORIZONTAL }    local scroll = CCScroll:scrollWithFile( _scroll_info.x, _scroll_info.y, _scroll_info.width, _scroll_info.height, _scroll_info.maxnum, _scroll_info.image, _scroll_info.stype )    --scroll:setScrollLump(UIResourcePath.FileLocate.common .. "up_progress.png", UIResourcePath.FileLocate.common .. "down_progress.png", 4, 40, size_h / 2)    local had_add_t = {}    local function scrollfun(eventType, args, msg_id)        if eventType == nil or args == nil or msg_id == nil then             return        end        if eventType == TOUCH_BEGAN then            return true        elseif eventType == TOUCH_MOVED then            return true        elseif eventType == TOUCH_ENDED then            return true        elseif eventType == SCROLL_CREATE_ITEM then            local temparg = Utils:Split(args,":")            local x = temparg[1]              -- 行            local index = x * colu_num             local row_h = 93            local t_dis_y = 3            local row_w = _t_scroll_item_info.width            local bg_vertical = CCBasePanel:panelWithFile( 0, t_dis_y / 2, row_w, row_h, "")            local colu_with = 190            local indent_x= 22   --缩进            local space_x = ( _t_scroll_item_info.width - colu_with * 2 ) / 5    --列距            for i = 1, colu_num do                if _slot_para_t[index + i] then                    --print("run scroll create index+i",index+i,index,i, x, colu_num, args)                -- print("创建先g::::::::", i, colu_num, _slot_para_t[index + i], index + i)                    local bg = self:create_item_show_panel( _slot_para_t[index + i],                         (i - 1) * colu_with + space_x * i, 0, colu_with, row_h )                    bg_vertical:addChild(bg.view)                else                    local bg = CCBasePanel:panelWithFileS(CCPointMake(0,0),CCSizeMake(colu_with, row_h),nil)                    bg_vertical:addChild(bg)                end                                end            local item = CCBasePanel:panelWithFile(0, 0, row_w, row_h + t_dis_y, "")            item:addChild(bg_vertical)            scroll:addItem(item)            scroll:refresh()            return false        end    end    scroll:registerScriptHandler(scrollfun)    scroll:refresh()    return scrollendfunction Transfer:unselecte_all_item( ... )    for k,show_item_panel in pairs(self.show_item_panel_t) do        show_item_panel.set_selected(false)    end    ForgeModel:set_insert_item_series(nil) end-- 创建一个道具显示面板function Transfer:create_item_show_panel( panel_date, x, y, w, h )    local item_series = panel_date[1]    local num = panel_date[2]    item_id = panel_date[3]    --_level_need = num    print("Transfer:create_item_show_panel num",num, item_series)    if self.show_item_panel_t[item_series] then        -- 所有道具展示面板[item_series] then        -- 设置品质特效 /hcl/on 2013/7/17-----------------------------------        local item_date = ForgeModel:get_item_in_bag_or_body( item_series )        local item_base = ItemConfig:get_item_by_id( item_date.item_id )        local pj = ItemModel:get_item_pj( item_base )        self.show_item_panel_t[item_series].slot_item:set_item_quality(item_date.void_bytes_tab[1],pj);        -------------------------------------------------------------------------        return self.show_item_panel_t[item_series]    end    local show_item_panel = {}    local show_item_panel_bg = CCBasePanel:panelWithFile( x, y , w, h, UILH_COMMON.bg_10, 500, 500 )    show_item_panel.view = show_item_panel_bg    -- local itemBg = CCZXImage:imageWithFile(x+14, y+12, 70, 70, UIPIC_FORGE_029)    -- show_item_panel:addChild(itemBg)    local slotItem = MUtils:create_one_slotItem( nil, 15, 20, 64, 64 )    --创建slotitem    slotItem.view:setScale( 50 / 60 )    show_item_panel.view:addChild( slotItem.view )    print("item_series",item_series)    local item_date = ForgeModel:get_item_in_bag_or_body( item_series )    slotItem.set_date( item_date )    local item_base = ItemConfig:get_item_by_id( item_date.item_id )    local pj = ItemModel:get_item_pj( item_base )    -- 设置品质特效    slotItem:set_item_quality(item_date.void_bytes_tab[1],pj);    -- 单击回调    local function f1()        ForgeModel:set_strengthen_item_series( item_series )    end    -- 显示信息:名称和数字    local strong_lable = nil    if item_date then        local item_name = ForgeModel:get_item_name_with_color( item_date.item_id )        local name_lable = UILabel:create_lable_2( item_name, 75, 55, font_size, ALIGN_LEFT )        show_item_panel.view:addChild( name_lable )                strong_lable = UILabel:create_lable_2( LangGameString[1018]..item_date.strong, 75, 20, font_size, ALIGN_LEFT ) -- [1018]="#cffff00强化 +"        show_item_panel.view:addChild( strong_lable )     end    local selected_bg = CCBasePanel:panelWithFile(0, 0, w, h, UILH_COMMON.slot_focus, 500, 500)    show_item_panel.view:addChild(selected_bg)    selected_bg:setIsVisible(false)    show_item_panel.set_selected = function( show_flash )        selected_bg:setIsVisible(show_flash)    end    -- 设置该道具为选中状态     show_item_panel.set_state = function( if_selected )        if if_selected then            -- slotItem:set_slot_disable(  )            show_item_panel.set_selected(true)        else            -- slotItem:set_slot_enable(  )            show_item_panel.set_selected(false)        end    end    -- 如果和选中的装备是同一个，就设置道具为不可选状态    if ForgeModel:check_is_strengthen_item( item_series ) then        -- slotItem:set_slot_disable(  )        show_item_panel.set_selected(true)    end    -- 重新更新数据    show_item_panel.update_date = function(  )        local item_date_temp = ForgeModel:get_item_in_bag_or_body( item_series )        slotItem.set_date( item_date_temp )        -- 选中状态        if ForgeModel:check_is_strengthen_item( item_series ) then            -- slotItem:set_slot_disable(  )            show_item_panel.set_selected(true)        end        if item_date_temp then            strong_lable:setString( LangGameString[1018]..item_date_temp.strong ) -- [1018]="#cffff00强化 +"        end    end    local function f3( ... )        -- 判断转移源item是否已选，若已选，则要放到转移目标上        if _left_slotitem_item_source.item_series == nil then            self:set_left_item( "source", item_date )            -- self:set_left_item( "source", item_date.item_id, num, item_series)            _level_need = num     -- 设置右侧item刷新需要的等级            _level_min = 0        -- 让目标item可以选择0强化等级的物品            -- 这个界面，点击以后要干掉所有slot，创建新的，导致引擎轮询后面子节点为nil，所以要等到双击事件下一帧才刷新            local callback_temp = callback:new()                    local function callback_func()                print("create  3，所以")            self:flash_all_item_right()                callback_temp:cancel()            end            print("create  2")            callback_temp:start( 0, callback_func )                    else            self:set_left_item( "target", item_date )            self:unselect_all_item()            -- self:set_left_item( "target", item_date.item_id, num, item_series)            show_item_panel.set_selected(true)            --self:set_r_up_one_slot_disable(slotItem);        end    end    local function f4( eventType )        if eventType == TOUCH_CLICK then            -- 判断转移源item是否已选，若已选，则要放到转移目标上            if _left_slotitem_item_source.item_series == nil then                self:set_left_item( "source", item_date)                -- self:set_left_item( "source", item_date.item_id, num, item_series)                _level_need = num     -- 设置右侧item刷新需要的等级                _level_min = 0        -- 让目标item可以选择0强化等级的物品                -- 这个界面，点击以后要干掉所有slot，创建新的，导致引擎轮询后面子节点为nil，所以要等到双击事件下一帧才刷新                local callback_temp = callback:new()                        local function callback_func()                    print("create  3，所以")                self:flash_all_item_right()                    callback_temp:cancel()                end                print("create  2")                callback_temp:start( 0, callback_func )                            else                self:set_left_item( "target", item_date )                self:unselect_all_item()                -- self:set_left_item( "target", item_date.item_id, num, item_series)                show_item_panel.set_selected(true)                --self:set_r_up_one_slot_disable(slotItem);            end        end    end    slotItem:set_click_event(f3)    show_item_panel.view:registerScriptHandler(f4)    show_item_panel.do_click = f3    show_item_panel.item_series = item_series    show_item_panel.slot_item = slotItem;    safe_retain(show_item_panel.view)    self.show_item_panel_t[item_series] = show_item_panel    return show_item_panel    -- local t = panel_date                -- 历史原因，使用t    -- local bg = CCBasePanel:panelWithFile( x, y , w, h , "" )    -- if panel_date == nil then    --     return bg    -- end    -- local slotItem = self:create_item_right( t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8] )    -- if slotItem then    --     bg:addChild(slotItem.view)    -- end    -- return bgend--刷新右侧所有item. function Transfer:flash_all_item_right( )    self:remove_all_item_right( )    -- print("create  1")    self:create_bag_slot( self.panel_t["right_panel"] , _level_need, 420, 440 )    -- print("create  2")end--清空右侧面板所有itemfunction Transfer:remove_all_item_right( )    local panel  = self.panel_t["right_panel"]           --默认上面的装备面板    local item_table = self.right_item_t                 --上面所有item的table    -- panel:removeChild(self.r_down_scroll, true)         if self.r_down_scroll then        self.r_down_scroll:clear()    end    -- for i = 1, #item_table do    --     panel:removeChild(item_table[i].view, true)    -- end    self.right_item_t = {}                                      -- 清空以后，表也要清空    for key, show_item_panel in pairs(self.show_item_panel_t) do         safe_release(show_item_panel.view)    end    self.show_item_panel_t = {}end-- 设置锁function Transfer:set_slot_lock( item_series, slotItem )    if item_series == nil and slotItem then        slotItem:set_lock(false)        return    end    local item = ItemModel:get_item_by_series( item_series )    if item then        slotItem:set_lock(item.flag == 1)    endend-- 测试tipsfunction Transfer:show_tool_tips_left(  type )    local extend_date = {}    if "source" == type then        ToolTipMgr( "item", _left_slotitem_item_source.item_id, extend_date)    elseif "target" == type then        ToolTipMgr( "item", _left_slotitem_item_target.item_id, extend_date)    end    endfunction Transfer:show_tool_tips_rihgt(  item_id )    local extend_date = {}    ToolTipMgr( "item", item_id,extend_date)endfunction Transfer:active()end-- -- 设置制定slot为无效效状态function Transfer:set_r_up_one_slot_disable( slotItem  )    -- -- 必须先设置其他为有效装备    -- for i, slot in pairs(self.right_item_t) do     --     slot:set_slot_enable()    -- end    -- slotItem:set_slot_disable( )endfunction Transfer:unselect_all_item()    for k,show_item_panel in pairs(self.show_item_panel_t) do        show_item_panel.set_selected(false)    endendfunction Transfer:destroy()    for key, show_item_panel in pairs(self.show_item_panel_t) do         safe_release(show_item_panel.view)    end    Window.destroy(self)end